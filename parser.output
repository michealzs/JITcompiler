Terminals unused in grammar

    REMOP
    ARROW
    CASE
    ENDSWITCH
    OTHERS
    SWITCH
    FOLD
    ENDFOLD
    LEFT
    RIGHT


State 3 conflicts: 1 reduce/reduce
State 12 conflicts: 1 reduce/reduce
State 26 conflicts: 12 reduce/reduce
State 27 conflicts: 12 reduce/reduce
State 28 conflicts: 12 reduce/reduce
State 29 conflicts: 12 reduce/reduce
State 30 conflicts: 12 reduce/reduce
State 39 conflicts: 3 shift/reduce
State 48 conflicts: 4 shift/reduce
State 58 conflicts: 7 shift/reduce
State 69 conflicts: 2 shift/reduce
State 77 conflicts: 12 reduce/reduce
State 84 conflicts: 3 shift/reduce
State 85 conflicts: 4 shift/reduce


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body ';'

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';'

    3 type: INTEGER
    4     | REAL
    5     | CHARACTER

    6 optional_variable: variables
    7                  | ε
    8                  | error ';'

    9 variables: variable variables
   10          | ε
   11          | error ';'

   12 variable: IDENTIFIER ':' type IS statement ';'
   13         | IDENTIFIER ':' LIST OF type IS list ';'

   14 list: '(' expressions ')'

   15 expressions: expressions ',' expression
   16            | expression

   17 body: BEGIN_ statement_ END

   18 statement_: statement ';'
   19           | error ';'

   20 statement: WHEN condition
   21          | expression
   22          | WHEN condition ',' expression ':' expression
   23          | if_statement

   24 if_statement: IF condition THEN statement_ elsif_clauses ENDIF
   25             | IF condition THEN statement_ elsif_clauses ELSE statement_ ENDIF

   26 elsif_clauses: ε
   27              | ELSIF condition THEN statement_ elsif_clauses

   28 condition: condition ANDOP relation
   29          | condition OROP relation
   30          | NOTOP condition
   31          | relation

   32 relation: '(' condition ')'
   33         | expression RELOP expression

   34 expression: '(' expression ')'
   35           | expression arithmetic_operator expression
   36           | NEGOP expression
   37           | INT_LITERAL
   38           | CHAR_LITERAL
   39           | REAL_LITERAL
   40           | HEX_LITERAL
   41           | FLOAT_LITERAL
   42           | expression ADDOP term
   43           | term

   44 arithmetic_operator: ADDOP
   45                    | MULOP
   46                    | MODOP
   47                    | EXPOP

   48 term: term EXPOP primary
   49     | term MULOP primary
   50     | term MODOP primary
   51     | primary

   52 primary: '(' expression ')'
   53        | INT_LITERAL
   54        | CHAR_LITERAL
   55        | REAL_LITERAL
   56        | HEX_LITERAL
   57        | FLOAT_LITERAL
   58        | IDENTIFIER '(' expression ')'
   59        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 14 32 34 52 58
    ')' (41) 14 32 34 52 58
    ',' (44) 15 22
    ':' (58) 12 13 22
    ';' (59) 1 2 8 11 12 13 18 19
    error (256) 8 11 19
    IDENTIFIER <iden> (258) 2 12 13 58 59
    INT_LITERAL <value> (259) 37 53
    CHAR_LITERAL <value> (260) 38 54
    REAL_LITERAL <value> (261) 39 55
    HEX_LITERAL <value> (262) 40 56
    FLOAT_LITERAL <value> (263) 41 57
    ADDOP <oper> (264) 42 44
    MULOP <oper> (265) 45 49
    ANDOP <oper> (266) 28
    RELOP <oper> (267) 33
    EXPOP <oper> (268) 47 48
    REMOP <oper> (269)
    NEGOP <oper> (270) 36
    MODOP <oper> (271) 46 50
    NOTOP <oper> (272) 30
    OROP <oper> (273) 29
    ARROW (274)
    BEGIN_ (275) 17
    CASE (276)
    CHARACTER (277) 5
    ELSE (278) 25
    END (279) 17
    ENDSWITCH (280)
    FUNCTION (281) 2
    INTEGER (282) 3
    IS (283) 12 13
    LIST (284) 13
    OF (285) 13
    OTHERS (286)
    RETURNS (287) 2
    SWITCH (288)
    WHEN (289) 20 22
    REAL (290) 4
    IF (291) 24 25
    THEN (292) 24 25 27
    ELSIF (293) 27
    ENDIF (294) 24 25
    FOLD (295)
    ENDFOLD (296)
    LEFT (297)
    RIGHT (298)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    function (50)
        on left: 1
        on right: 0
    function_header (51)
        on left: 2
        on right: 1
    type (52)
        on left: 3 4 5
        on right: 2 12 13
    optional_variable (53)
        on left: 6 7 8
        on right: 1
    variables (54)
        on left: 9 10 11
        on right: 6 9
    variable (55)
        on left: 12 13
        on right: 9
    list <list> (56)
        on left: 14
        on right: 13
    expressions <list> (57)
        on left: 15 16
        on right: 14 15
    body <value> (58)
        on left: 17
        on right: 1
    statement_ <value> (59)
        on left: 18 19
        on right: 17 24 25 27
    statement <value> (60)
        on left: 20 21 22 23
        on right: 12 18
    if_statement <value> (61)
        on left: 24 25
        on right: 23
    elsif_clauses <value> (62)
        on left: 26 27
        on right: 24 25 27
    condition <value> (63)
        on left: 28 29 30 31
        on right: 20 22 24 25 27 28 29 30 32
    relation <value> (64)
        on left: 32 33
        on right: 28 29 31
    expression <value> (65)
        on left: 34 35 36 37 38 39 40 41 42 43
        on right: 15 16 21 22 33 34 35 36 42 52 58
    arithmetic_operator <oper> (66)
        on left: 44 45 46 47
        on right: 35
    term <value> (67)
        on left: 48 49 50 51
        on right: 42 43 48 49 50
    primary <value> (68)
        on left: 52 53 54 55 56 57 58 59
        on right: 48 49 50 51


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable body ';'

    error       shift, and go to state 6
    IDENTIFIER  shift, and go to state 7

    BEGIN_  reduce using rule 7 (optional_variable)
    BEGIN_  [reduce using rule 10 (variables)]

    optional_variable  go to state 8
    variables          go to state 9
    variable           go to state 10


State 4

    2 function_header: FUNCTION IDENTIFIER • RETURNS type ';'

    RETURNS  shift, and go to state 11


State 5

    0 $accept: function $end •

    $default  accept


State 6

    8 optional_variable: error • ';'
   11 variables: error • ';'

    ';'  shift, and go to state 12


State 7

   12 variable: IDENTIFIER • ':' type IS statement ';'
   13         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 13


State 8

    1 function: function_header optional_variable • body ';'

    BEGIN_  shift, and go to state 14

    body  go to state 15


State 9

    6 optional_variable: variables •

    $default  reduce using rule 6 (optional_variable)


State 10

    9 variables: variable • variables

    error       shift, and go to state 16
    IDENTIFIER  shift, and go to state 7

    BEGIN_  reduce using rule 10 (variables)

    variables  go to state 17
    variable   go to state 10


State 11

    2 function_header: FUNCTION IDENTIFIER RETURNS • type ';'

    CHARACTER  shift, and go to state 18
    INTEGER    shift, and go to state 19
    REAL       shift, and go to state 20

    type  go to state 21


State 12

    8 optional_variable: error ';' •
   11 variables: error ';' •

    BEGIN_    reduce using rule 8 (optional_variable)
    BEGIN_    [reduce using rule 11 (variables)]
    $default  reduce using rule 8 (optional_variable)


State 13

   12 variable: IDENTIFIER ':' • type IS statement ';'
   13         | IDENTIFIER ':' • LIST OF type IS list ';'

    CHARACTER  shift, and go to state 18
    INTEGER    shift, and go to state 19
    LIST       shift, and go to state 22
    REAL       shift, and go to state 20

    type  go to state 23


State 14

   17 body: BEGIN_ • statement_ END

    error          shift, and go to state 24
    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 26
    CHAR_LITERAL   shift, and go to state 27
    REAL_LITERAL   shift, and go to state 28
    HEX_LITERAL    shift, and go to state 29
    FLOAT_LITERAL  shift, and go to state 30
    NEGOP          shift, and go to state 31
    WHEN           shift, and go to state 32
    IF             shift, and go to state 33
    '('            shift, and go to state 34

    statement_    go to state 35
    statement     go to state 36
    if_statement  go to state 37
    expression    go to state 38
    term          go to state 39
    primary       go to state 40


State 15

    1 function: function_header optional_variable body • ';'

    ';'  shift, and go to state 41


State 16

   11 variables: error • ';'

    ';'  shift, and go to state 42


State 17

    9 variables: variable variables •

    $default  reduce using rule 9 (variables)


State 18

    5 type: CHARACTER •

    $default  reduce using rule 5 (type)


State 19

    3 type: INTEGER •

    $default  reduce using rule 3 (type)


State 20

    4 type: REAL •

    $default  reduce using rule 4 (type)


State 21

    2 function_header: FUNCTION IDENTIFIER RETURNS type • ';'

    ';'  shift, and go to state 43


State 22

   13 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 44


State 23

   12 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 45


State 24

   19 statement_: error • ';'

    ';'  shift, and go to state 46


State 25

   58 primary: IDENTIFIER • '(' expression ')'
   59        | IDENTIFIER •

    '('  shift, and go to state 47

    $default  reduce using rule 59 (primary)


State 26

   37 expression: INT_LITERAL •
   53 primary: INT_LITERAL •

    ADDOP     reduce using rule 37 (expression)
    ADDOP     [reduce using rule 53 (primary)]
    MULOP     reduce using rule 37 (expression)
    MULOP     [reduce using rule 53 (primary)]
    ANDOP     reduce using rule 37 (expression)
    ANDOP     [reduce using rule 53 (primary)]
    RELOP     reduce using rule 37 (expression)
    RELOP     [reduce using rule 53 (primary)]
    EXPOP     reduce using rule 37 (expression)
    EXPOP     [reduce using rule 53 (primary)]
    MODOP     reduce using rule 37 (expression)
    MODOP     [reduce using rule 53 (primary)]
    OROP      reduce using rule 37 (expression)
    OROP      [reduce using rule 53 (primary)]
    THEN      reduce using rule 37 (expression)
    THEN      [reduce using rule 53 (primary)]
    ';'       reduce using rule 37 (expression)
    ';'       [reduce using rule 53 (primary)]
    ':'       reduce using rule 37 (expression)
    ':'       [reduce using rule 53 (primary)]
    ')'       reduce using rule 37 (expression)
    ')'       [reduce using rule 53 (primary)]
    ','       reduce using rule 37 (expression)
    ','       [reduce using rule 53 (primary)]
    $default  reduce using rule 37 (expression)


State 27

   38 expression: CHAR_LITERAL •
   54 primary: CHAR_LITERAL •

    ADDOP     reduce using rule 38 (expression)
    ADDOP     [reduce using rule 54 (primary)]
    MULOP     reduce using rule 38 (expression)
    MULOP     [reduce using rule 54 (primary)]
    ANDOP     reduce using rule 38 (expression)
    ANDOP     [reduce using rule 54 (primary)]
    RELOP     reduce using rule 38 (expression)
    RELOP     [reduce using rule 54 (primary)]
    EXPOP     reduce using rule 38 (expression)
    EXPOP     [reduce using rule 54 (primary)]
    MODOP     reduce using rule 38 (expression)
    MODOP     [reduce using rule 54 (primary)]
    OROP      reduce using rule 38 (expression)
    OROP      [reduce using rule 54 (primary)]
    THEN      reduce using rule 38 (expression)
    THEN      [reduce using rule 54 (primary)]
    ';'       reduce using rule 38 (expression)
    ';'       [reduce using rule 54 (primary)]
    ':'       reduce using rule 38 (expression)
    ':'       [reduce using rule 54 (primary)]
    ')'       reduce using rule 38 (expression)
    ')'       [reduce using rule 54 (primary)]
    ','       reduce using rule 38 (expression)
    ','       [reduce using rule 54 (primary)]
    $default  reduce using rule 38 (expression)


State 28

   39 expression: REAL_LITERAL •
   55 primary: REAL_LITERAL •

    ADDOP     reduce using rule 39 (expression)
    ADDOP     [reduce using rule 55 (primary)]
    MULOP     reduce using rule 39 (expression)
    MULOP     [reduce using rule 55 (primary)]
    ANDOP     reduce using rule 39 (expression)
    ANDOP     [reduce using rule 55 (primary)]
    RELOP     reduce using rule 39 (expression)
    RELOP     [reduce using rule 55 (primary)]
    EXPOP     reduce using rule 39 (expression)
    EXPOP     [reduce using rule 55 (primary)]
    MODOP     reduce using rule 39 (expression)
    MODOP     [reduce using rule 55 (primary)]
    OROP      reduce using rule 39 (expression)
    OROP      [reduce using rule 55 (primary)]
    THEN      reduce using rule 39 (expression)
    THEN      [reduce using rule 55 (primary)]
    ';'       reduce using rule 39 (expression)
    ';'       [reduce using rule 55 (primary)]
    ':'       reduce using rule 39 (expression)
    ':'       [reduce using rule 55 (primary)]
    ')'       reduce using rule 39 (expression)
    ')'       [reduce using rule 55 (primary)]
    ','       reduce using rule 39 (expression)
    ','       [reduce using rule 55 (primary)]
    $default  reduce using rule 39 (expression)


State 29

   40 expression: HEX_LITERAL •
   56 primary: HEX_LITERAL •

    ADDOP     reduce using rule 40 (expression)
    ADDOP     [reduce using rule 56 (primary)]
    MULOP     reduce using rule 40 (expression)
    MULOP     [reduce using rule 56 (primary)]
    ANDOP     reduce using rule 40 (expression)
    ANDOP     [reduce using rule 56 (primary)]
    RELOP     reduce using rule 40 (expression)
    RELOP     [reduce using rule 56 (primary)]
    EXPOP     reduce using rule 40 (expression)
    EXPOP     [reduce using rule 56 (primary)]
    MODOP     reduce using rule 40 (expression)
    MODOP     [reduce using rule 56 (primary)]
    OROP      reduce using rule 40 (expression)
    OROP      [reduce using rule 56 (primary)]
    THEN      reduce using rule 40 (expression)
    THEN      [reduce using rule 56 (primary)]
    ';'       reduce using rule 40 (expression)
    ';'       [reduce using rule 56 (primary)]
    ':'       reduce using rule 40 (expression)
    ':'       [reduce using rule 56 (primary)]
    ')'       reduce using rule 40 (expression)
    ')'       [reduce using rule 56 (primary)]
    ','       reduce using rule 40 (expression)
    ','       [reduce using rule 56 (primary)]
    $default  reduce using rule 40 (expression)


State 30

   41 expression: FLOAT_LITERAL •
   57 primary: FLOAT_LITERAL •

    ADDOP     reduce using rule 41 (expression)
    ADDOP     [reduce using rule 57 (primary)]
    MULOP     reduce using rule 41 (expression)
    MULOP     [reduce using rule 57 (primary)]
    ANDOP     reduce using rule 41 (expression)
    ANDOP     [reduce using rule 57 (primary)]
    RELOP     reduce using rule 41 (expression)
    RELOP     [reduce using rule 57 (primary)]
    EXPOP     reduce using rule 41 (expression)
    EXPOP     [reduce using rule 57 (primary)]
    MODOP     reduce using rule 41 (expression)
    MODOP     [reduce using rule 57 (primary)]
    OROP      reduce using rule 41 (expression)
    OROP      [reduce using rule 57 (primary)]
    THEN      reduce using rule 41 (expression)
    THEN      [reduce using rule 57 (primary)]
    ';'       reduce using rule 41 (expression)
    ';'       [reduce using rule 57 (primary)]
    ':'       reduce using rule 41 (expression)
    ':'       [reduce using rule 57 (primary)]
    ')'       reduce using rule 41 (expression)
    ')'       [reduce using rule 57 (primary)]
    ','       reduce using rule 41 (expression)
    ','       [reduce using rule 57 (primary)]
    $default  reduce using rule 41 (expression)


State 31

   36 expression: NEGOP • expression

    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 26
    CHAR_LITERAL   shift, and go to state 27
    REAL_LITERAL   shift, and go to state 28
    HEX_LITERAL    shift, and go to state 29
    FLOAT_LITERAL  shift, and go to state 30
    NEGOP          shift, and go to state 31
    '('            shift, and go to state 34

    expression  go to state 48
    term        go to state 39
    primary     go to state 40


State 32

   20 statement: WHEN • condition
   22          | WHEN • condition ',' expression ':' expression

    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 26
    CHAR_LITERAL   shift, and go to state 27
    REAL_LITERAL   shift, and go to state 28
    HEX_LITERAL    shift, and go to state 29
    FLOAT_LITERAL  shift, and go to state 30
    NEGOP          shift, and go to state 31
    NOTOP          shift, and go to state 49
    '('            shift, and go to state 50

    condition   go to state 51
    relation    go to state 52
    expression  go to state 53
    term        go to state 39
    primary     go to state 40


State 33

   24 if_statement: IF • condition THEN statement_ elsif_clauses ENDIF
   25             | IF • condition THEN statement_ elsif_clauses ELSE statement_ ENDIF

    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 26
    CHAR_LITERAL   shift, and go to state 27
    REAL_LITERAL   shift, and go to state 28
    HEX_LITERAL    shift, and go to state 29
    FLOAT_LITERAL  shift, and go to state 30
    NEGOP          shift, and go to state 31
    NOTOP          shift, and go to state 49
    '('            shift, and go to state 50

    condition   go to state 54
    relation    go to state 52
    expression  go to state 53
    term        go to state 39
    primary     go to state 40


State 34

   34 expression: '(' • expression ')'
   52 primary: '(' • expression ')'

    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 26
    CHAR_LITERAL   shift, and go to state 27
    REAL_LITERAL   shift, and go to state 28
    HEX_LITERAL    shift, and go to state 29
    FLOAT_LITERAL  shift, and go to state 30
    NEGOP          shift, and go to state 31
    '('            shift, and go to state 34

    expression  go to state 55
    term        go to state 39
    primary     go to state 40


State 35

   17 body: BEGIN_ statement_ • END

    END  shift, and go to state 56


State 36

   18 statement_: statement • ';'

    ';'  shift, and go to state 57


State 37

   23 statement: if_statement •

    $default  reduce using rule 23 (statement)


State 38

   21 statement: expression •
   35 expression: expression • arithmetic_operator expression
   42           | expression • ADDOP term

    ADDOP  shift, and go to state 58
    MULOP  shift, and go to state 59
    EXPOP  shift, and go to state 60
    MODOP  shift, and go to state 61

    $default  reduce using rule 21 (statement)

    arithmetic_operator  go to state 62


State 39

   43 expression: term •
   48 term: term • EXPOP primary
   49     | term • MULOP primary
   50     | term • MODOP primary

    MULOP  shift, and go to state 63
    EXPOP  shift, and go to state 64
    MODOP  shift, and go to state 65

    MULOP     [reduce using rule 43 (expression)]
    EXPOP     [reduce using rule 43 (expression)]
    MODOP     [reduce using rule 43 (expression)]
    $default  reduce using rule 43 (expression)


State 40

   51 term: primary •

    $default  reduce using rule 51 (term)


State 41

    1 function: function_header optional_variable body ';' •

    $default  reduce using rule 1 (function)


State 42

   11 variables: error ';' •

    $default  reduce using rule 11 (variables)


State 43

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 44

   13 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    CHARACTER  shift, and go to state 18
    INTEGER    shift, and go to state 19
    REAL       shift, and go to state 20

    type  go to state 66


State 45

   12 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 26
    CHAR_LITERAL   shift, and go to state 27
    REAL_LITERAL   shift, and go to state 28
    HEX_LITERAL    shift, and go to state 29
    FLOAT_LITERAL  shift, and go to state 30
    NEGOP          shift, and go to state 31
    WHEN           shift, and go to state 32
    IF             shift, and go to state 33
    '('            shift, and go to state 34

    statement     go to state 67
    if_statement  go to state 37
    expression    go to state 38
    term          go to state 39
    primary       go to state 40


State 46

   19 statement_: error ';' •

    $default  reduce using rule 19 (statement_)


State 47

   58 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 26
    CHAR_LITERAL   shift, and go to state 27
    REAL_LITERAL   shift, and go to state 28
    HEX_LITERAL    shift, and go to state 29
    FLOAT_LITERAL  shift, and go to state 30
    NEGOP          shift, and go to state 31
    '('            shift, and go to state 34

    expression  go to state 68
    term        go to state 39
    primary     go to state 40


State 48

   35 expression: expression • arithmetic_operator expression
   36           | NEGOP expression •
   42           | expression • ADDOP term

    ADDOP  shift, and go to state 58
    MULOP  shift, and go to state 59
    EXPOP  shift, and go to state 60
    MODOP  shift, and go to state 61

    ADDOP     [reduce using rule 36 (expression)]
    MULOP     [reduce using rule 36 (expression)]
    EXPOP     [reduce using rule 36 (expression)]
    MODOP     [reduce using rule 36 (expression)]
    $default  reduce using rule 36 (expression)

    arithmetic_operator  go to state 62


State 49

   30 condition: NOTOP • condition

    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 26
    CHAR_LITERAL   shift, and go to state 27
    REAL_LITERAL   shift, and go to state 28
    HEX_LITERAL    shift, and go to state 29
    FLOAT_LITERAL  shift, and go to state 30
    NEGOP          shift, and go to state 31
    NOTOP          shift, and go to state 49
    '('            shift, and go to state 50

    condition   go to state 69
    relation    go to state 52
    expression  go to state 53
    term        go to state 39
    primary     go to state 40


State 50

   32 relation: '(' • condition ')'
   34 expression: '(' • expression ')'
   52 primary: '(' • expression ')'

    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 26
    CHAR_LITERAL   shift, and go to state 27
    REAL_LITERAL   shift, and go to state 28
    HEX_LITERAL    shift, and go to state 29
    FLOAT_LITERAL  shift, and go to state 30
    NEGOP          shift, and go to state 31
    NOTOP          shift, and go to state 49
    '('            shift, and go to state 50

    condition   go to state 70
    relation    go to state 52
    expression  go to state 71
    term        go to state 39
    primary     go to state 40


State 51

   20 statement: WHEN condition •
   22          | WHEN condition • ',' expression ':' expression
   28 condition: condition • ANDOP relation
   29          | condition • OROP relation

    ANDOP  shift, and go to state 72
    OROP   shift, and go to state 73
    ','    shift, and go to state 74

    $default  reduce using rule 20 (statement)


State 52

   31 condition: relation •

    $default  reduce using rule 31 (condition)


State 53

   33 relation: expression • RELOP expression
   35 expression: expression • arithmetic_operator expression
   42           | expression • ADDOP term

    ADDOP  shift, and go to state 58
    MULOP  shift, and go to state 59
    RELOP  shift, and go to state 75
    EXPOP  shift, and go to state 60
    MODOP  shift, and go to state 61

    arithmetic_operator  go to state 62


State 54

   24 if_statement: IF condition • THEN statement_ elsif_clauses ENDIF
   25             | IF condition • THEN statement_ elsif_clauses ELSE statement_ ENDIF
   28 condition: condition • ANDOP relation
   29          | condition • OROP relation

    ANDOP  shift, and go to state 72
    OROP   shift, and go to state 73
    THEN   shift, and go to state 76


State 55

   34 expression: '(' expression • ')'
   35           | expression • arithmetic_operator expression
   42           | expression • ADDOP term
   52 primary: '(' expression • ')'

    ADDOP  shift, and go to state 58
    MULOP  shift, and go to state 59
    EXPOP  shift, and go to state 60
    MODOP  shift, and go to state 61
    ')'    shift, and go to state 77

    arithmetic_operator  go to state 62


State 56

   17 body: BEGIN_ statement_ END •

    $default  reduce using rule 17 (body)


State 57

   18 statement_: statement ';' •

    $default  reduce using rule 18 (statement_)


State 58

   42 expression: expression ADDOP • term
   44 arithmetic_operator: ADDOP •

    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 78
    CHAR_LITERAL   shift, and go to state 79
    REAL_LITERAL   shift, and go to state 80
    HEX_LITERAL    shift, and go to state 81
    FLOAT_LITERAL  shift, and go to state 82
    '('            shift, and go to state 83

    IDENTIFIER     [reduce using rule 44 (arithmetic_operator)]
    INT_LITERAL    [reduce using rule 44 (arithmetic_operator)]
    CHAR_LITERAL   [reduce using rule 44 (arithmetic_operator)]
    REAL_LITERAL   [reduce using rule 44 (arithmetic_operator)]
    HEX_LITERAL    [reduce using rule 44 (arithmetic_operator)]
    FLOAT_LITERAL  [reduce using rule 44 (arithmetic_operator)]
    '('            [reduce using rule 44 (arithmetic_operator)]
    $default       reduce using rule 44 (arithmetic_operator)

    term     go to state 84
    primary  go to state 40


State 59

   45 arithmetic_operator: MULOP •

    $default  reduce using rule 45 (arithmetic_operator)


State 60

   47 arithmetic_operator: EXPOP •

    $default  reduce using rule 47 (arithmetic_operator)


State 61

   46 arithmetic_operator: MODOP •

    $default  reduce using rule 46 (arithmetic_operator)


State 62

   35 expression: expression arithmetic_operator • expression

    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 26
    CHAR_LITERAL   shift, and go to state 27
    REAL_LITERAL   shift, and go to state 28
    HEX_LITERAL    shift, and go to state 29
    FLOAT_LITERAL  shift, and go to state 30
    NEGOP          shift, and go to state 31
    '('            shift, and go to state 34

    expression  go to state 85
    term        go to state 39
    primary     go to state 40


State 63

   49 term: term MULOP • primary

    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 78
    CHAR_LITERAL   shift, and go to state 79
    REAL_LITERAL   shift, and go to state 80
    HEX_LITERAL    shift, and go to state 81
    FLOAT_LITERAL  shift, and go to state 82
    '('            shift, and go to state 83

    primary  go to state 86


State 64

   48 term: term EXPOP • primary

    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 78
    CHAR_LITERAL   shift, and go to state 79
    REAL_LITERAL   shift, and go to state 80
    HEX_LITERAL    shift, and go to state 81
    FLOAT_LITERAL  shift, and go to state 82
    '('            shift, and go to state 83

    primary  go to state 87


State 65

   50 term: term MODOP • primary

    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 78
    CHAR_LITERAL   shift, and go to state 79
    REAL_LITERAL   shift, and go to state 80
    HEX_LITERAL    shift, and go to state 81
    FLOAT_LITERAL  shift, and go to state 82
    '('            shift, and go to state 83

    primary  go to state 88


State 66

   13 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 89


State 67

   12 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 90


State 68

   35 expression: expression • arithmetic_operator expression
   42           | expression • ADDOP term
   58 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 58
    MULOP  shift, and go to state 59
    EXPOP  shift, and go to state 60
    MODOP  shift, and go to state 61
    ')'    shift, and go to state 91

    arithmetic_operator  go to state 62


State 69

   28 condition: condition • ANDOP relation
   29          | condition • OROP relation
   30          | NOTOP condition •

    ANDOP  shift, and go to state 72
    OROP   shift, and go to state 73

    ANDOP     [reduce using rule 30 (condition)]
    OROP      [reduce using rule 30 (condition)]
    $default  reduce using rule 30 (condition)


State 70

   28 condition: condition • ANDOP relation
   29          | condition • OROP relation
   32 relation: '(' condition • ')'

    ANDOP  shift, and go to state 72
    OROP   shift, and go to state 73
    ')'    shift, and go to state 92


State 71

   33 relation: expression • RELOP expression
   34 expression: '(' expression • ')'
   35           | expression • arithmetic_operator expression
   42           | expression • ADDOP term
   52 primary: '(' expression • ')'

    ADDOP  shift, and go to state 58
    MULOP  shift, and go to state 59
    RELOP  shift, and go to state 75
    EXPOP  shift, and go to state 60
    MODOP  shift, and go to state 61
    ')'    shift, and go to state 77

    arithmetic_operator  go to state 62


State 72

   28 condition: condition ANDOP • relation

    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 26
    CHAR_LITERAL   shift, and go to state 27
    REAL_LITERAL   shift, and go to state 28
    HEX_LITERAL    shift, and go to state 29
    FLOAT_LITERAL  shift, and go to state 30
    NEGOP          shift, and go to state 31
    '('            shift, and go to state 50

    relation    go to state 93
    expression  go to state 53
    term        go to state 39
    primary     go to state 40


State 73

   29 condition: condition OROP • relation

    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 26
    CHAR_LITERAL   shift, and go to state 27
    REAL_LITERAL   shift, and go to state 28
    HEX_LITERAL    shift, and go to state 29
    FLOAT_LITERAL  shift, and go to state 30
    NEGOP          shift, and go to state 31
    '('            shift, and go to state 50

    relation    go to state 94
    expression  go to state 53
    term        go to state 39
    primary     go to state 40


State 74

   22 statement: WHEN condition ',' • expression ':' expression

    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 26
    CHAR_LITERAL   shift, and go to state 27
    REAL_LITERAL   shift, and go to state 28
    HEX_LITERAL    shift, and go to state 29
    FLOAT_LITERAL  shift, and go to state 30
    NEGOP          shift, and go to state 31
    '('            shift, and go to state 34

    expression  go to state 95
    term        go to state 39
    primary     go to state 40


State 75

   33 relation: expression RELOP • expression

    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 26
    CHAR_LITERAL   shift, and go to state 27
    REAL_LITERAL   shift, and go to state 28
    HEX_LITERAL    shift, and go to state 29
    FLOAT_LITERAL  shift, and go to state 30
    NEGOP          shift, and go to state 31
    '('            shift, and go to state 34

    expression  go to state 96
    term        go to state 39
    primary     go to state 40


State 76

   24 if_statement: IF condition THEN • statement_ elsif_clauses ENDIF
   25             | IF condition THEN • statement_ elsif_clauses ELSE statement_ ENDIF

    error          shift, and go to state 24
    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 26
    CHAR_LITERAL   shift, and go to state 27
    REAL_LITERAL   shift, and go to state 28
    HEX_LITERAL    shift, and go to state 29
    FLOAT_LITERAL  shift, and go to state 30
    NEGOP          shift, and go to state 31
    WHEN           shift, and go to state 32
    IF             shift, and go to state 33
    '('            shift, and go to state 34

    statement_    go to state 97
    statement     go to state 36
    if_statement  go to state 37
    expression    go to state 38
    term          go to state 39
    primary       go to state 40


State 77

   34 expression: '(' expression ')' •
   52 primary: '(' expression ')' •

    ADDOP     reduce using rule 34 (expression)
    ADDOP     [reduce using rule 52 (primary)]
    MULOP     reduce using rule 34 (expression)
    MULOP     [reduce using rule 52 (primary)]
    ANDOP     reduce using rule 34 (expression)
    ANDOP     [reduce using rule 52 (primary)]
    RELOP     reduce using rule 34 (expression)
    RELOP     [reduce using rule 52 (primary)]
    EXPOP     reduce using rule 34 (expression)
    EXPOP     [reduce using rule 52 (primary)]
    MODOP     reduce using rule 34 (expression)
    MODOP     [reduce using rule 52 (primary)]
    OROP      reduce using rule 34 (expression)
    OROP      [reduce using rule 52 (primary)]
    THEN      reduce using rule 34 (expression)
    THEN      [reduce using rule 52 (primary)]
    ';'       reduce using rule 34 (expression)
    ';'       [reduce using rule 52 (primary)]
    ':'       reduce using rule 34 (expression)
    ':'       [reduce using rule 52 (primary)]
    ')'       reduce using rule 34 (expression)
    ')'       [reduce using rule 52 (primary)]
    ','       reduce using rule 34 (expression)
    ','       [reduce using rule 52 (primary)]
    $default  reduce using rule 34 (expression)


State 78

   53 primary: INT_LITERAL •

    $default  reduce using rule 53 (primary)


State 79

   54 primary: CHAR_LITERAL •

    $default  reduce using rule 54 (primary)


State 80

   55 primary: REAL_LITERAL •

    $default  reduce using rule 55 (primary)


State 81

   56 primary: HEX_LITERAL •

    $default  reduce using rule 56 (primary)


State 82

   57 primary: FLOAT_LITERAL •

    $default  reduce using rule 57 (primary)


State 83

   52 primary: '(' • expression ')'

    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 26
    CHAR_LITERAL   shift, and go to state 27
    REAL_LITERAL   shift, and go to state 28
    HEX_LITERAL    shift, and go to state 29
    FLOAT_LITERAL  shift, and go to state 30
    NEGOP          shift, and go to state 31
    '('            shift, and go to state 34

    expression  go to state 98
    term        go to state 39
    primary     go to state 40


State 84

   42 expression: expression ADDOP term •
   48 term: term • EXPOP primary
   49     | term • MULOP primary
   50     | term • MODOP primary

    MULOP  shift, and go to state 63
    EXPOP  shift, and go to state 64
    MODOP  shift, and go to state 65

    MULOP     [reduce using rule 42 (expression)]
    EXPOP     [reduce using rule 42 (expression)]
    MODOP     [reduce using rule 42 (expression)]
    $default  reduce using rule 42 (expression)


State 85

   35 expression: expression • arithmetic_operator expression
   35           | expression arithmetic_operator expression •
   42           | expression • ADDOP term

    ADDOP  shift, and go to state 58
    MULOP  shift, and go to state 59
    EXPOP  shift, and go to state 60
    MODOP  shift, and go to state 61

    ADDOP     [reduce using rule 35 (expression)]
    MULOP     [reduce using rule 35 (expression)]
    EXPOP     [reduce using rule 35 (expression)]
    MODOP     [reduce using rule 35 (expression)]
    $default  reduce using rule 35 (expression)

    arithmetic_operator  go to state 62


State 86

   49 term: term MULOP primary •

    $default  reduce using rule 49 (term)


State 87

   48 term: term EXPOP primary •

    $default  reduce using rule 48 (term)


State 88

   50 term: term MODOP primary •

    $default  reduce using rule 50 (term)


State 89

   13 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 99

    list  go to state 100


State 90

   12 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 12 (variable)


State 91

   58 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 58 (primary)


State 92

   32 relation: '(' condition ')' •

    $default  reduce using rule 32 (relation)


State 93

   28 condition: condition ANDOP relation •

    $default  reduce using rule 28 (condition)


State 94

   29 condition: condition OROP relation •

    $default  reduce using rule 29 (condition)


State 95

   22 statement: WHEN condition ',' expression • ':' expression
   35 expression: expression • arithmetic_operator expression
   42           | expression • ADDOP term

    ADDOP  shift, and go to state 58
    MULOP  shift, and go to state 59
    EXPOP  shift, and go to state 60
    MODOP  shift, and go to state 61
    ':'    shift, and go to state 101

    arithmetic_operator  go to state 62


State 96

   33 relation: expression RELOP expression •
   35 expression: expression • arithmetic_operator expression
   42           | expression • ADDOP term

    ADDOP  shift, and go to state 58
    MULOP  shift, and go to state 59
    EXPOP  shift, and go to state 60
    MODOP  shift, and go to state 61

    $default  reduce using rule 33 (relation)

    arithmetic_operator  go to state 62


State 97

   24 if_statement: IF condition THEN statement_ • elsif_clauses ENDIF
   25             | IF condition THEN statement_ • elsif_clauses ELSE statement_ ENDIF

    ELSIF  shift, and go to state 102

    $default  reduce using rule 26 (elsif_clauses)

    elsif_clauses  go to state 103


State 98

   35 expression: expression • arithmetic_operator expression
   42           | expression • ADDOP term
   52 primary: '(' expression • ')'

    ADDOP  shift, and go to state 58
    MULOP  shift, and go to state 59
    EXPOP  shift, and go to state 60
    MODOP  shift, and go to state 61
    ')'    shift, and go to state 104

    arithmetic_operator  go to state 62


State 99

   14 list: '(' • expressions ')'

    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 26
    CHAR_LITERAL   shift, and go to state 27
    REAL_LITERAL   shift, and go to state 28
    HEX_LITERAL    shift, and go to state 29
    FLOAT_LITERAL  shift, and go to state 30
    NEGOP          shift, and go to state 31
    '('            shift, and go to state 34

    expressions  go to state 105
    expression   go to state 106
    term         go to state 39
    primary      go to state 40


State 100

   13 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 107


State 101

   22 statement: WHEN condition ',' expression ':' • expression

    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 26
    CHAR_LITERAL   shift, and go to state 27
    REAL_LITERAL   shift, and go to state 28
    HEX_LITERAL    shift, and go to state 29
    FLOAT_LITERAL  shift, and go to state 30
    NEGOP          shift, and go to state 31
    '('            shift, and go to state 34

    expression  go to state 108
    term        go to state 39
    primary     go to state 40


State 102

   27 elsif_clauses: ELSIF • condition THEN statement_ elsif_clauses

    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 26
    CHAR_LITERAL   shift, and go to state 27
    REAL_LITERAL   shift, and go to state 28
    HEX_LITERAL    shift, and go to state 29
    FLOAT_LITERAL  shift, and go to state 30
    NEGOP          shift, and go to state 31
    NOTOP          shift, and go to state 49
    '('            shift, and go to state 50

    condition   go to state 109
    relation    go to state 52
    expression  go to state 53
    term        go to state 39
    primary     go to state 40


State 103

   24 if_statement: IF condition THEN statement_ elsif_clauses • ENDIF
   25             | IF condition THEN statement_ elsif_clauses • ELSE statement_ ENDIF

    ELSE   shift, and go to state 110
    ENDIF  shift, and go to state 111


State 104

   52 primary: '(' expression ')' •

    $default  reduce using rule 52 (primary)


State 105

   14 list: '(' expressions • ')'
   15 expressions: expressions • ',' expression

    ')'  shift, and go to state 112
    ','  shift, and go to state 113


State 106

   16 expressions: expression •
   35 expression: expression • arithmetic_operator expression
   42           | expression • ADDOP term

    ADDOP  shift, and go to state 58
    MULOP  shift, and go to state 59
    EXPOP  shift, and go to state 60
    MODOP  shift, and go to state 61

    $default  reduce using rule 16 (expressions)

    arithmetic_operator  go to state 62


State 107

   13 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 13 (variable)


State 108

   22 statement: WHEN condition ',' expression ':' expression •
   35 expression: expression • arithmetic_operator expression
   42           | expression • ADDOP term

    ADDOP  shift, and go to state 58
    MULOP  shift, and go to state 59
    EXPOP  shift, and go to state 60
    MODOP  shift, and go to state 61

    $default  reduce using rule 22 (statement)

    arithmetic_operator  go to state 62


State 109

   27 elsif_clauses: ELSIF condition • THEN statement_ elsif_clauses
   28 condition: condition • ANDOP relation
   29          | condition • OROP relation

    ANDOP  shift, and go to state 72
    OROP   shift, and go to state 73
    THEN   shift, and go to state 114


State 110

   25 if_statement: IF condition THEN statement_ elsif_clauses ELSE • statement_ ENDIF

    error          shift, and go to state 24
    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 26
    CHAR_LITERAL   shift, and go to state 27
    REAL_LITERAL   shift, and go to state 28
    HEX_LITERAL    shift, and go to state 29
    FLOAT_LITERAL  shift, and go to state 30
    NEGOP          shift, and go to state 31
    WHEN           shift, and go to state 32
    IF             shift, and go to state 33
    '('            shift, and go to state 34

    statement_    go to state 115
    statement     go to state 36
    if_statement  go to state 37
    expression    go to state 38
    term          go to state 39
    primary       go to state 40


State 111

   24 if_statement: IF condition THEN statement_ elsif_clauses ENDIF •

    $default  reduce using rule 24 (if_statement)


State 112

   14 list: '(' expressions ')' •

    $default  reduce using rule 14 (list)


State 113

   15 expressions: expressions ',' • expression

    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 26
    CHAR_LITERAL   shift, and go to state 27
    REAL_LITERAL   shift, and go to state 28
    HEX_LITERAL    shift, and go to state 29
    FLOAT_LITERAL  shift, and go to state 30
    NEGOP          shift, and go to state 31
    '('            shift, and go to state 34

    expression  go to state 116
    term        go to state 39
    primary     go to state 40


State 114

   27 elsif_clauses: ELSIF condition THEN • statement_ elsif_clauses

    error          shift, and go to state 24
    IDENTIFIER     shift, and go to state 25
    INT_LITERAL    shift, and go to state 26
    CHAR_LITERAL   shift, and go to state 27
    REAL_LITERAL   shift, and go to state 28
    HEX_LITERAL    shift, and go to state 29
    FLOAT_LITERAL  shift, and go to state 30
    NEGOP          shift, and go to state 31
    WHEN           shift, and go to state 32
    IF             shift, and go to state 33
    '('            shift, and go to state 34

    statement_    go to state 117
    statement     go to state 36
    if_statement  go to state 37
    expression    go to state 38
    term          go to state 39
    primary       go to state 40


State 115

   25 if_statement: IF condition THEN statement_ elsif_clauses ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 118


State 116

   15 expressions: expressions ',' expression •
   35 expression: expression • arithmetic_operator expression
   42           | expression • ADDOP term

    ADDOP  shift, and go to state 58
    MULOP  shift, and go to state 59
    EXPOP  shift, and go to state 60
    MODOP  shift, and go to state 61

    $default  reduce using rule 15 (expressions)

    arithmetic_operator  go to state 62


State 117

   27 elsif_clauses: ELSIF condition THEN statement_ • elsif_clauses

    ELSIF  shift, and go to state 102

    $default  reduce using rule 26 (elsif_clauses)

    elsif_clauses  go to state 119


State 118

   25 if_statement: IF condition THEN statement_ elsif_clauses ELSE statement_ ENDIF •

    $default  reduce using rule 25 (if_statement)


State 119

   27 elsif_clauses: ELSIF condition THEN statement_ elsif_clauses •

    $default  reduce using rule 27 (elsif_clauses)
