Terminals unused in grammar

    REMOP


State 4 conflicts: 1 reduce/reduce
State 17 conflicts: 1 reduce/reduce
State 35 conflicts: 13 reduce/reduce
State 36 conflicts: 13 reduce/reduce
State 37 conflicts: 13 reduce/reduce
State 38 conflicts: 13 reduce/reduce
State 39 conflicts: 13 reduce/reduce
State 51 conflicts: 3 shift/reduce
State 63 conflicts: 4 shift/reduce
State 77 conflicts: 7 shift/reduce
State 91 conflicts: 2 shift/reduce
State 101 conflicts: 13 reduce/reduce
State 108 conflicts: 3 shift/reduce
State 109 conflicts: 4 shift/reduce


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body ';'

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';'
    3                | FUNCTION IDENTIFIER parameters RETURNS type ';'
    4                | error ';'

    5 parameters: parameter more_parameters

    6 more_parameters: ',' parameter more_parameters
    7                | ε

    8 parameter: IDENTIFIER ':' type

    9 type: INTEGER
   10     | REAL
   11     | CHARACTER

   12 optional_variable: variables
   13                  | ε
   14                  | error ';'

   15 variables: variable variables
   16          | ε
   17          | error ';'

   18 variable: IDENTIFIER ':' type IS statement ';'
   19         | IDENTIFIER ':' LIST OF type IS list ';'

   20 list: '(' expressions ')'

   21 expressions: expressions ',' expression
   22            | expression

   23 body: BEGIN_ statement_ END

   24 statement_: statement ';'
   25           | error ';'

   26 statement: WHEN condition
   27          | expression
   28          | WHEN condition ',' expression ':' expression
   29          | if_statement
   30          | fold_statement
   31          | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH

   32 cases: cases case
   33      | ε

   34 case: CASE INT_LITERAL ARROW statement ';'

   35 fold_statement: FOLD direction arithmetic_operator list_choice ENDFOLD

   36 direction: LEFT
   37          | RIGHT

   38 list_choice: list
   39            | IDENTIFIER

   40 if_statement: IF condition THEN statement_ elsif_clauses ENDIF
   41             | IF condition THEN statement_ elsif_clauses ELSE statement_ ENDIF

   42 elsif_clauses: ε
   43              | ELSIF condition THEN statement_ elsif_clauses

   44 condition: condition ANDOP relation
   45          | condition OROP relation
   46          | NOTOP condition
   47          | relation

   48 relation: '(' condition ')'
   49         | expression RELOP expression

   50 expression: '(' expression ')'
   51           | expression arithmetic_operator expression
   52           | NEGOP expression
   53           | INT_LITERAL
   54           | CHAR_LITERAL
   55           | REAL_LITERAL
   56           | HEX_LITERAL
   57           | FLOAT_LITERAL
   58           | expression ADDOP term
   59           | term

   60 arithmetic_operator: ADDOP
   61                    | MULOP
   62                    | MODOP
   63                    | EXPOP

   64 term: term EXPOP primary
   65     | term MULOP primary
   66     | term MODOP primary
   67     | primary

   68 primary: '(' expression ')'
   69        | INT_LITERAL
   70        | CHAR_LITERAL
   71        | REAL_LITERAL
   72        | HEX_LITERAL
   73        | FLOAT_LITERAL
   74        | IDENTIFIER '(' expression ')'
   75        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 20 48 50 68 74
    ')' (41) 20 48 50 68 74
    ',' (44) 6 21 28
    ':' (58) 8 18 19 28
    ';' (59) 1 2 3 4 14 17 18 19 24 25 31 34
    error (256) 4 14 17 25
    IDENTIFIER <iden> (258) 2 3 8 18 19 39 74 75
    INT_LITERAL <value> (259) 34 53 69
    CHAR_LITERAL <value> (260) 54 70
    REAL_LITERAL <value> (261) 55 71
    HEX_LITERAL <value> (262) 56 72
    FLOAT_LITERAL <value> (263) 57 73
    ADDOP <oper> (264) 58 60
    MULOP <oper> (265) 61 65
    ANDOP <oper> (266) 44
    RELOP <oper> (267) 49
    EXPOP <oper> (268) 63 64
    REMOP <oper> (269)
    NEGOP <oper> (270) 52
    MODOP <oper> (271) 62 66
    NOTOP <oper> (272) 46
    OROP <oper> (273) 45
    ARROW (274) 31 34
    BEGIN_ (275) 23
    CASE (276) 34
    CHARACTER (277) 11
    ELSE (278) 41
    END (279) 23
    ENDSWITCH (280) 31
    FUNCTION (281) 2 3
    INTEGER (282) 9
    IS (283) 18 19 31
    LIST (284) 19
    OF (285) 19
    OTHERS (286) 31
    RETURNS (287) 2 3
    SWITCH (288) 31
    WHEN (289) 26 28
    REAL (290) 10
    IF (291) 40 41
    THEN (292) 40 41 43
    ELSIF (293) 43
    ENDIF (294) 40 41
    FOLD (295) 35
    ENDFOLD (296) 35
    LEFT (297) 36
    RIGHT (298) 37


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    function (50)
        on left: 1
        on right: 0
    function_header (51)
        on left: 2 3 4
        on right: 1
    parameters (52)
        on left: 5
        on right: 3
    more_parameters (53)
        on left: 6 7
        on right: 5 6
    parameter (54)
        on left: 8
        on right: 5 6
    type (55)
        on left: 9 10 11
        on right: 2 3 8 18 19
    optional_variable (56)
        on left: 12 13 14
        on right: 1
    variables (57)
        on left: 15 16 17
        on right: 12 15
    variable (58)
        on left: 18 19
        on right: 15
    list <list> (59)
        on left: 20
        on right: 19 38
    expressions <list> (60)
        on left: 21 22
        on right: 20 21
    body <value> (61)
        on left: 23
        on right: 1
    statement_ <value> (62)
        on left: 24 25
        on right: 23 40 41 43
    statement <value> (63)
        on left: 26 27 28 29 30 31
        on right: 18 24 31 34
    cases <casesArray> (64)
        on left: 32 33
        on right: 31 32
    case <aCase> (65)
        on left: 34
        on right: 32
    fold_statement <value> (66)
        on left: 35
        on right: 30
    direction <direction> (67)
        on left: 36 37
        on right: 35
    list_choice <list> (68)
        on left: 38 39
        on right: 35
    if_statement <value> (69)
        on left: 40 41
        on right: 29
    elsif_clauses <value> (70)
        on left: 42 43
        on right: 40 41 43
    condition <value> (71)
        on left: 44 45 46 47
        on right: 26 28 40 41 43 44 45 46 48
    relation <value> (72)
        on left: 48 49
        on right: 44 45 47
    expression <value> (73)
        on left: 50 51 52 53 54 55 56 57 58 59
        on right: 21 22 27 28 31 49 50 51 52 58 68 74
    arithmetic_operator <oper> (74)
        on left: 60 61 62 63
        on right: 35 51
    term <value> (75)
        on left: 64 65 66 67
        on right: 58 59 64 65 66
    primary <value> (76)
        on left: 68 69 70 71 72 73 74 75
        on right: 64 65 66 67


State 0

    0 $accept: • function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    4 function_header: error • ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION • IDENTIFIER RETURNS type ';'
    3                | FUNCTION • IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function • $end

    $end  shift, and go to state 7


State 4

    1 function: function_header • optional_variable body ';'

    error       shift, and go to state 8
    IDENTIFIER  shift, and go to state 9

    BEGIN_  reduce using rule 13 (optional_variable)
    BEGIN_  [reduce using rule 16 (variables)]

    optional_variable  go to state 10
    variables          go to state 11
    variable           go to state 12


State 5

    4 function_header: error ';' •

    $default  reduce using rule 4 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER • RETURNS type ';'
    3                | FUNCTION IDENTIFIER • parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 13
    RETURNS     shift, and go to state 14

    parameters  go to state 15
    parameter   go to state 16


State 7

    0 $accept: function $end •

    $default  accept


State 8

   14 optional_variable: error • ';'
   17 variables: error • ';'

    ';'  shift, and go to state 17


State 9

   18 variable: IDENTIFIER • ':' type IS statement ';'
   19         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 18


State 10

    1 function: function_header optional_variable • body ';'

    BEGIN_  shift, and go to state 19

    body  go to state 20


State 11

   12 optional_variable: variables •

    $default  reduce using rule 12 (optional_variable)


State 12

   15 variables: variable • variables

    error       shift, and go to state 21
    IDENTIFIER  shift, and go to state 9

    BEGIN_  reduce using rule 16 (variables)

    variables  go to state 22
    variable   go to state 12


State 13

    8 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 23


State 14

    2 function_header: FUNCTION IDENTIFIER RETURNS • type ';'

    CHARACTER  shift, and go to state 24
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26

    type  go to state 27


State 15

    3 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'

    RETURNS  shift, and go to state 28


State 16

    5 parameters: parameter • more_parameters

    ','  shift, and go to state 29

    $default  reduce using rule 7 (more_parameters)

    more_parameters  go to state 30


State 17

   14 optional_variable: error ';' •
   17 variables: error ';' •

    BEGIN_    reduce using rule 14 (optional_variable)
    BEGIN_    [reduce using rule 17 (variables)]
    $default  reduce using rule 14 (optional_variable)


State 18

   18 variable: IDENTIFIER ':' • type IS statement ';'
   19         | IDENTIFIER ':' • LIST OF type IS list ';'

    CHARACTER  shift, and go to state 24
    INTEGER    shift, and go to state 25
    LIST       shift, and go to state 31
    REAL       shift, and go to state 26

    type  go to state 32


State 19

   23 body: BEGIN_ • statement_ END

    error          shift, and go to state 33
    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    SWITCH         shift, and go to state 41
    WHEN           shift, and go to state 42
    IF             shift, and go to state 43
    FOLD           shift, and go to state 44
    '('            shift, and go to state 45

    statement_      go to state 46
    statement       go to state 47
    fold_statement  go to state 48
    if_statement    go to state 49
    expression      go to state 50
    term            go to state 51
    primary         go to state 52


State 20

    1 function: function_header optional_variable body • ';'

    ';'  shift, and go to state 53


State 21

   17 variables: error • ';'

    ';'  shift, and go to state 54


State 22

   15 variables: variable variables •

    $default  reduce using rule 15 (variables)


State 23

    8 parameter: IDENTIFIER ':' • type

    CHARACTER  shift, and go to state 24
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26

    type  go to state 55


State 24

   11 type: CHARACTER •

    $default  reduce using rule 11 (type)


State 25

    9 type: INTEGER •

    $default  reduce using rule 9 (type)


State 26

   10 type: REAL •

    $default  reduce using rule 10 (type)


State 27

    2 function_header: FUNCTION IDENTIFIER RETURNS type • ';'

    ';'  shift, and go to state 56


State 28

    3 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    CHARACTER  shift, and go to state 24
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26

    type  go to state 57


State 29

    6 more_parameters: ',' • parameter more_parameters

    IDENTIFIER  shift, and go to state 13

    parameter  go to state 58


State 30

    5 parameters: parameter more_parameters •

    $default  reduce using rule 5 (parameters)


State 31

   19 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 59


State 32

   18 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 60


State 33

   25 statement_: error • ';'

    ';'  shift, and go to state 61


State 34

   74 primary: IDENTIFIER • '(' expression ')'
   75        | IDENTIFIER •

    '('  shift, and go to state 62

    $default  reduce using rule 75 (primary)


State 35

   53 expression: INT_LITERAL •
   69 primary: INT_LITERAL •

    ADDOP     reduce using rule 53 (expression)
    ADDOP     [reduce using rule 69 (primary)]
    MULOP     reduce using rule 53 (expression)
    MULOP     [reduce using rule 69 (primary)]
    ANDOP     reduce using rule 53 (expression)
    ANDOP     [reduce using rule 69 (primary)]
    RELOP     reduce using rule 53 (expression)
    RELOP     [reduce using rule 69 (primary)]
    EXPOP     reduce using rule 53 (expression)
    EXPOP     [reduce using rule 69 (primary)]
    MODOP     reduce using rule 53 (expression)
    MODOP     [reduce using rule 69 (primary)]
    OROP      reduce using rule 53 (expression)
    OROP      [reduce using rule 69 (primary)]
    IS        reduce using rule 53 (expression)
    IS        [reduce using rule 69 (primary)]
    THEN      reduce using rule 53 (expression)
    THEN      [reduce using rule 69 (primary)]
    ';'       reduce using rule 53 (expression)
    ';'       [reduce using rule 69 (primary)]
    ','       reduce using rule 53 (expression)
    ','       [reduce using rule 69 (primary)]
    ':'       reduce using rule 53 (expression)
    ':'       [reduce using rule 69 (primary)]
    ')'       reduce using rule 53 (expression)
    ')'       [reduce using rule 69 (primary)]
    $default  reduce using rule 53 (expression)


State 36

   54 expression: CHAR_LITERAL •
   70 primary: CHAR_LITERAL •

    ADDOP     reduce using rule 54 (expression)
    ADDOP     [reduce using rule 70 (primary)]
    MULOP     reduce using rule 54 (expression)
    MULOP     [reduce using rule 70 (primary)]
    ANDOP     reduce using rule 54 (expression)
    ANDOP     [reduce using rule 70 (primary)]
    RELOP     reduce using rule 54 (expression)
    RELOP     [reduce using rule 70 (primary)]
    EXPOP     reduce using rule 54 (expression)
    EXPOP     [reduce using rule 70 (primary)]
    MODOP     reduce using rule 54 (expression)
    MODOP     [reduce using rule 70 (primary)]
    OROP      reduce using rule 54 (expression)
    OROP      [reduce using rule 70 (primary)]
    IS        reduce using rule 54 (expression)
    IS        [reduce using rule 70 (primary)]
    THEN      reduce using rule 54 (expression)
    THEN      [reduce using rule 70 (primary)]
    ';'       reduce using rule 54 (expression)
    ';'       [reduce using rule 70 (primary)]
    ','       reduce using rule 54 (expression)
    ','       [reduce using rule 70 (primary)]
    ':'       reduce using rule 54 (expression)
    ':'       [reduce using rule 70 (primary)]
    ')'       reduce using rule 54 (expression)
    ')'       [reduce using rule 70 (primary)]
    $default  reduce using rule 54 (expression)


State 37

   55 expression: REAL_LITERAL •
   71 primary: REAL_LITERAL •

    ADDOP     reduce using rule 55 (expression)
    ADDOP     [reduce using rule 71 (primary)]
    MULOP     reduce using rule 55 (expression)
    MULOP     [reduce using rule 71 (primary)]
    ANDOP     reduce using rule 55 (expression)
    ANDOP     [reduce using rule 71 (primary)]
    RELOP     reduce using rule 55 (expression)
    RELOP     [reduce using rule 71 (primary)]
    EXPOP     reduce using rule 55 (expression)
    EXPOP     [reduce using rule 71 (primary)]
    MODOP     reduce using rule 55 (expression)
    MODOP     [reduce using rule 71 (primary)]
    OROP      reduce using rule 55 (expression)
    OROP      [reduce using rule 71 (primary)]
    IS        reduce using rule 55 (expression)
    IS        [reduce using rule 71 (primary)]
    THEN      reduce using rule 55 (expression)
    THEN      [reduce using rule 71 (primary)]
    ';'       reduce using rule 55 (expression)
    ';'       [reduce using rule 71 (primary)]
    ','       reduce using rule 55 (expression)
    ','       [reduce using rule 71 (primary)]
    ':'       reduce using rule 55 (expression)
    ':'       [reduce using rule 71 (primary)]
    ')'       reduce using rule 55 (expression)
    ')'       [reduce using rule 71 (primary)]
    $default  reduce using rule 55 (expression)


State 38

   56 expression: HEX_LITERAL •
   72 primary: HEX_LITERAL •

    ADDOP     reduce using rule 56 (expression)
    ADDOP     [reduce using rule 72 (primary)]
    MULOP     reduce using rule 56 (expression)
    MULOP     [reduce using rule 72 (primary)]
    ANDOP     reduce using rule 56 (expression)
    ANDOP     [reduce using rule 72 (primary)]
    RELOP     reduce using rule 56 (expression)
    RELOP     [reduce using rule 72 (primary)]
    EXPOP     reduce using rule 56 (expression)
    EXPOP     [reduce using rule 72 (primary)]
    MODOP     reduce using rule 56 (expression)
    MODOP     [reduce using rule 72 (primary)]
    OROP      reduce using rule 56 (expression)
    OROP      [reduce using rule 72 (primary)]
    IS        reduce using rule 56 (expression)
    IS        [reduce using rule 72 (primary)]
    THEN      reduce using rule 56 (expression)
    THEN      [reduce using rule 72 (primary)]
    ';'       reduce using rule 56 (expression)
    ';'       [reduce using rule 72 (primary)]
    ','       reduce using rule 56 (expression)
    ','       [reduce using rule 72 (primary)]
    ':'       reduce using rule 56 (expression)
    ':'       [reduce using rule 72 (primary)]
    ')'       reduce using rule 56 (expression)
    ')'       [reduce using rule 72 (primary)]
    $default  reduce using rule 56 (expression)


State 39

   57 expression: FLOAT_LITERAL •
   73 primary: FLOAT_LITERAL •

    ADDOP     reduce using rule 57 (expression)
    ADDOP     [reduce using rule 73 (primary)]
    MULOP     reduce using rule 57 (expression)
    MULOP     [reduce using rule 73 (primary)]
    ANDOP     reduce using rule 57 (expression)
    ANDOP     [reduce using rule 73 (primary)]
    RELOP     reduce using rule 57 (expression)
    RELOP     [reduce using rule 73 (primary)]
    EXPOP     reduce using rule 57 (expression)
    EXPOP     [reduce using rule 73 (primary)]
    MODOP     reduce using rule 57 (expression)
    MODOP     [reduce using rule 73 (primary)]
    OROP      reduce using rule 57 (expression)
    OROP      [reduce using rule 73 (primary)]
    IS        reduce using rule 57 (expression)
    IS        [reduce using rule 73 (primary)]
    THEN      reduce using rule 57 (expression)
    THEN      [reduce using rule 73 (primary)]
    ';'       reduce using rule 57 (expression)
    ';'       [reduce using rule 73 (primary)]
    ','       reduce using rule 57 (expression)
    ','       [reduce using rule 73 (primary)]
    ':'       reduce using rule 57 (expression)
    ':'       [reduce using rule 73 (primary)]
    ')'       reduce using rule 57 (expression)
    ')'       [reduce using rule 73 (primary)]
    $default  reduce using rule 57 (expression)


State 40

   52 expression: NEGOP • expression

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 45

    expression  go to state 63
    term        go to state 51
    primary     go to state 52


State 41

   31 statement: SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 45

    expression  go to state 64
    term        go to state 51
    primary     go to state 52


State 42

   26 statement: WHEN • condition
   28          | WHEN • condition ',' expression ':' expression

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    NOTOP          shift, and go to state 65
    '('            shift, and go to state 66

    condition   go to state 67
    relation    go to state 68
    expression  go to state 69
    term        go to state 51
    primary     go to state 52


State 43

   40 if_statement: IF • condition THEN statement_ elsif_clauses ENDIF
   41             | IF • condition THEN statement_ elsif_clauses ELSE statement_ ENDIF

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    NOTOP          shift, and go to state 65
    '('            shift, and go to state 66

    condition   go to state 70
    relation    go to state 68
    expression  go to state 69
    term        go to state 51
    primary     go to state 52


State 44

   35 fold_statement: FOLD • direction arithmetic_operator list_choice ENDFOLD

    LEFT   shift, and go to state 71
    RIGHT  shift, and go to state 72

    direction  go to state 73


State 45

   50 expression: '(' • expression ')'
   68 primary: '(' • expression ')'

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 45

    expression  go to state 74
    term        go to state 51
    primary     go to state 52


State 46

   23 body: BEGIN_ statement_ • END

    END  shift, and go to state 75


State 47

   24 statement_: statement • ';'

    ';'  shift, and go to state 76


State 48

   30 statement: fold_statement •

    $default  reduce using rule 30 (statement)


State 49

   29 statement: if_statement •

    $default  reduce using rule 29 (statement)


State 50

   27 statement: expression •
   51 expression: expression • arithmetic_operator expression
   58           | expression • ADDOP term

    ADDOP  shift, and go to state 77
    MULOP  shift, and go to state 78
    EXPOP  shift, and go to state 79
    MODOP  shift, and go to state 80

    $default  reduce using rule 27 (statement)

    arithmetic_operator  go to state 81


State 51

   59 expression: term •
   64 term: term • EXPOP primary
   65     | term • MULOP primary
   66     | term • MODOP primary

    MULOP  shift, and go to state 82
    EXPOP  shift, and go to state 83
    MODOP  shift, and go to state 84

    MULOP     [reduce using rule 59 (expression)]
    EXPOP     [reduce using rule 59 (expression)]
    MODOP     [reduce using rule 59 (expression)]
    $default  reduce using rule 59 (expression)


State 52

   67 term: primary •

    $default  reduce using rule 67 (term)


State 53

    1 function: function_header optional_variable body ';' •

    $default  reduce using rule 1 (function)


State 54

   17 variables: error ';' •

    $default  reduce using rule 17 (variables)


State 55

    8 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 8 (parameter)


State 56

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 57

    3 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 85


State 58

    6 more_parameters: ',' parameter • more_parameters

    ','  shift, and go to state 29

    $default  reduce using rule 7 (more_parameters)

    more_parameters  go to state 86


State 59

   19 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    CHARACTER  shift, and go to state 24
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26

    type  go to state 87


State 60

   18 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    SWITCH         shift, and go to state 41
    WHEN           shift, and go to state 42
    IF             shift, and go to state 43
    FOLD           shift, and go to state 44
    '('            shift, and go to state 45

    statement       go to state 88
    fold_statement  go to state 48
    if_statement    go to state 49
    expression      go to state 50
    term            go to state 51
    primary         go to state 52


State 61

   25 statement_: error ';' •

    $default  reduce using rule 25 (statement_)


State 62

   74 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 45

    expression  go to state 89
    term        go to state 51
    primary     go to state 52


State 63

   51 expression: expression • arithmetic_operator expression
   52           | NEGOP expression •
   58           | expression • ADDOP term

    ADDOP  shift, and go to state 77
    MULOP  shift, and go to state 78
    EXPOP  shift, and go to state 79
    MODOP  shift, and go to state 80

    ADDOP     [reduce using rule 52 (expression)]
    MULOP     [reduce using rule 52 (expression)]
    EXPOP     [reduce using rule 52 (expression)]
    MODOP     [reduce using rule 52 (expression)]
    $default  reduce using rule 52 (expression)

    arithmetic_operator  go to state 81


State 64

   31 statement: SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH
   51 expression: expression • arithmetic_operator expression
   58           | expression • ADDOP term

    ADDOP  shift, and go to state 77
    MULOP  shift, and go to state 78
    EXPOP  shift, and go to state 79
    MODOP  shift, and go to state 80
    IS     shift, and go to state 90

    arithmetic_operator  go to state 81


State 65

   46 condition: NOTOP • condition

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    NOTOP          shift, and go to state 65
    '('            shift, and go to state 66

    condition   go to state 91
    relation    go to state 68
    expression  go to state 69
    term        go to state 51
    primary     go to state 52


State 66

   48 relation: '(' • condition ')'
   50 expression: '(' • expression ')'
   68 primary: '(' • expression ')'

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    NOTOP          shift, and go to state 65
    '('            shift, and go to state 66

    condition   go to state 92
    relation    go to state 68
    expression  go to state 93
    term        go to state 51
    primary     go to state 52


State 67

   26 statement: WHEN condition •
   28          | WHEN condition • ',' expression ':' expression
   44 condition: condition • ANDOP relation
   45          | condition • OROP relation

    ANDOP  shift, and go to state 94
    OROP   shift, and go to state 95
    ','    shift, and go to state 96

    $default  reduce using rule 26 (statement)


State 68

   47 condition: relation •

    $default  reduce using rule 47 (condition)


State 69

   49 relation: expression • RELOP expression
   51 expression: expression • arithmetic_operator expression
   58           | expression • ADDOP term

    ADDOP  shift, and go to state 77
    MULOP  shift, and go to state 78
    RELOP  shift, and go to state 97
    EXPOP  shift, and go to state 79
    MODOP  shift, and go to state 80

    arithmetic_operator  go to state 81


State 70

   40 if_statement: IF condition • THEN statement_ elsif_clauses ENDIF
   41             | IF condition • THEN statement_ elsif_clauses ELSE statement_ ENDIF
   44 condition: condition • ANDOP relation
   45          | condition • OROP relation

    ANDOP  shift, and go to state 94
    OROP   shift, and go to state 95
    THEN   shift, and go to state 98


State 71

   36 direction: LEFT •

    $default  reduce using rule 36 (direction)


State 72

   37 direction: RIGHT •

    $default  reduce using rule 37 (direction)


State 73

   35 fold_statement: FOLD direction • arithmetic_operator list_choice ENDFOLD

    ADDOP  shift, and go to state 99
    MULOP  shift, and go to state 78
    EXPOP  shift, and go to state 79
    MODOP  shift, and go to state 80

    arithmetic_operator  go to state 100


State 74

   50 expression: '(' expression • ')'
   51           | expression • arithmetic_operator expression
   58           | expression • ADDOP term
   68 primary: '(' expression • ')'

    ADDOP  shift, and go to state 77
    MULOP  shift, and go to state 78
    EXPOP  shift, and go to state 79
    MODOP  shift, and go to state 80
    ')'    shift, and go to state 101

    arithmetic_operator  go to state 81


State 75

   23 body: BEGIN_ statement_ END •

    $default  reduce using rule 23 (body)


State 76

   24 statement_: statement ';' •

    $default  reduce using rule 24 (statement_)


State 77

   58 expression: expression ADDOP • term
   60 arithmetic_operator: ADDOP •

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 102
    CHAR_LITERAL   shift, and go to state 103
    REAL_LITERAL   shift, and go to state 104
    HEX_LITERAL    shift, and go to state 105
    FLOAT_LITERAL  shift, and go to state 106
    '('            shift, and go to state 107

    IDENTIFIER     [reduce using rule 60 (arithmetic_operator)]
    INT_LITERAL    [reduce using rule 60 (arithmetic_operator)]
    CHAR_LITERAL   [reduce using rule 60 (arithmetic_operator)]
    REAL_LITERAL   [reduce using rule 60 (arithmetic_operator)]
    HEX_LITERAL    [reduce using rule 60 (arithmetic_operator)]
    FLOAT_LITERAL  [reduce using rule 60 (arithmetic_operator)]
    '('            [reduce using rule 60 (arithmetic_operator)]
    $default       reduce using rule 60 (arithmetic_operator)

    term     go to state 108
    primary  go to state 52


State 78

   61 arithmetic_operator: MULOP •

    $default  reduce using rule 61 (arithmetic_operator)


State 79

   63 arithmetic_operator: EXPOP •

    $default  reduce using rule 63 (arithmetic_operator)


State 80

   62 arithmetic_operator: MODOP •

    $default  reduce using rule 62 (arithmetic_operator)


State 81

   51 expression: expression arithmetic_operator • expression

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 45

    expression  go to state 109
    term        go to state 51
    primary     go to state 52


State 82

   65 term: term MULOP • primary

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 102
    CHAR_LITERAL   shift, and go to state 103
    REAL_LITERAL   shift, and go to state 104
    HEX_LITERAL    shift, and go to state 105
    FLOAT_LITERAL  shift, and go to state 106
    '('            shift, and go to state 107

    primary  go to state 110


State 83

   64 term: term EXPOP • primary

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 102
    CHAR_LITERAL   shift, and go to state 103
    REAL_LITERAL   shift, and go to state 104
    HEX_LITERAL    shift, and go to state 105
    FLOAT_LITERAL  shift, and go to state 106
    '('            shift, and go to state 107

    primary  go to state 111


State 84

   66 term: term MODOP • primary

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 102
    CHAR_LITERAL   shift, and go to state 103
    REAL_LITERAL   shift, and go to state 104
    HEX_LITERAL    shift, and go to state 105
    FLOAT_LITERAL  shift, and go to state 106
    '('            shift, and go to state 107

    primary  go to state 112


State 85

    3 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 3 (function_header)


State 86

    6 more_parameters: ',' parameter more_parameters •

    $default  reduce using rule 6 (more_parameters)


State 87

   19 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 113


State 88

   18 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 114


State 89

   51 expression: expression • arithmetic_operator expression
   58           | expression • ADDOP term
   74 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 77
    MULOP  shift, and go to state 78
    EXPOP  shift, and go to state 79
    MODOP  shift, and go to state 80
    ')'    shift, and go to state 115

    arithmetic_operator  go to state 81


State 90

   31 statement: SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH

    $default  reduce using rule 33 (cases)

    cases  go to state 116


State 91

   44 condition: condition • ANDOP relation
   45          | condition • OROP relation
   46          | NOTOP condition •

    ANDOP  shift, and go to state 94
    OROP   shift, and go to state 95

    ANDOP     [reduce using rule 46 (condition)]
    OROP      [reduce using rule 46 (condition)]
    $default  reduce using rule 46 (condition)


State 92

   44 condition: condition • ANDOP relation
   45          | condition • OROP relation
   48 relation: '(' condition • ')'

    ANDOP  shift, and go to state 94
    OROP   shift, and go to state 95
    ')'    shift, and go to state 117


State 93

   49 relation: expression • RELOP expression
   50 expression: '(' expression • ')'
   51           | expression • arithmetic_operator expression
   58           | expression • ADDOP term
   68 primary: '(' expression • ')'

    ADDOP  shift, and go to state 77
    MULOP  shift, and go to state 78
    RELOP  shift, and go to state 97
    EXPOP  shift, and go to state 79
    MODOP  shift, and go to state 80
    ')'    shift, and go to state 101

    arithmetic_operator  go to state 81


State 94

   44 condition: condition ANDOP • relation

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 66

    relation    go to state 118
    expression  go to state 69
    term        go to state 51
    primary     go to state 52


State 95

   45 condition: condition OROP • relation

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 66

    relation    go to state 119
    expression  go to state 69
    term        go to state 51
    primary     go to state 52


State 96

   28 statement: WHEN condition ',' • expression ':' expression

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 45

    expression  go to state 120
    term        go to state 51
    primary     go to state 52


State 97

   49 relation: expression RELOP • expression

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 45

    expression  go to state 121
    term        go to state 51
    primary     go to state 52


State 98

   40 if_statement: IF condition THEN • statement_ elsif_clauses ENDIF
   41             | IF condition THEN • statement_ elsif_clauses ELSE statement_ ENDIF

    error          shift, and go to state 33
    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    SWITCH         shift, and go to state 41
    WHEN           shift, and go to state 42
    IF             shift, and go to state 43
    FOLD           shift, and go to state 44
    '('            shift, and go to state 45

    statement_      go to state 122
    statement       go to state 47
    fold_statement  go to state 48
    if_statement    go to state 49
    expression      go to state 50
    term            go to state 51
    primary         go to state 52


State 99

   60 arithmetic_operator: ADDOP •

    $default  reduce using rule 60 (arithmetic_operator)


State 100

   35 fold_statement: FOLD direction arithmetic_operator • list_choice ENDFOLD

    IDENTIFIER  shift, and go to state 123
    '('         shift, and go to state 124

    list         go to state 125
    list_choice  go to state 126


State 101

   50 expression: '(' expression ')' •
   68 primary: '(' expression ')' •

    ADDOP     reduce using rule 50 (expression)
    ADDOP     [reduce using rule 68 (primary)]
    MULOP     reduce using rule 50 (expression)
    MULOP     [reduce using rule 68 (primary)]
    ANDOP     reduce using rule 50 (expression)
    ANDOP     [reduce using rule 68 (primary)]
    RELOP     reduce using rule 50 (expression)
    RELOP     [reduce using rule 68 (primary)]
    EXPOP     reduce using rule 50 (expression)
    EXPOP     [reduce using rule 68 (primary)]
    MODOP     reduce using rule 50 (expression)
    MODOP     [reduce using rule 68 (primary)]
    OROP      reduce using rule 50 (expression)
    OROP      [reduce using rule 68 (primary)]
    IS        reduce using rule 50 (expression)
    IS        [reduce using rule 68 (primary)]
    THEN      reduce using rule 50 (expression)
    THEN      [reduce using rule 68 (primary)]
    ';'       reduce using rule 50 (expression)
    ';'       [reduce using rule 68 (primary)]
    ','       reduce using rule 50 (expression)
    ','       [reduce using rule 68 (primary)]
    ':'       reduce using rule 50 (expression)
    ':'       [reduce using rule 68 (primary)]
    ')'       reduce using rule 50 (expression)
    ')'       [reduce using rule 68 (primary)]
    $default  reduce using rule 50 (expression)


State 102

   69 primary: INT_LITERAL •

    $default  reduce using rule 69 (primary)


State 103

   70 primary: CHAR_LITERAL •

    $default  reduce using rule 70 (primary)


State 104

   71 primary: REAL_LITERAL •

    $default  reduce using rule 71 (primary)


State 105

   72 primary: HEX_LITERAL •

    $default  reduce using rule 72 (primary)


State 106

   73 primary: FLOAT_LITERAL •

    $default  reduce using rule 73 (primary)


State 107

   68 primary: '(' • expression ')'

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 45

    expression  go to state 127
    term        go to state 51
    primary     go to state 52


State 108

   58 expression: expression ADDOP term •
   64 term: term • EXPOP primary
   65     | term • MULOP primary
   66     | term • MODOP primary

    MULOP  shift, and go to state 82
    EXPOP  shift, and go to state 83
    MODOP  shift, and go to state 84

    MULOP     [reduce using rule 58 (expression)]
    EXPOP     [reduce using rule 58 (expression)]
    MODOP     [reduce using rule 58 (expression)]
    $default  reduce using rule 58 (expression)


State 109

   51 expression: expression • arithmetic_operator expression
   51           | expression arithmetic_operator expression •
   58           | expression • ADDOP term

    ADDOP  shift, and go to state 77
    MULOP  shift, and go to state 78
    EXPOP  shift, and go to state 79
    MODOP  shift, and go to state 80

    ADDOP     [reduce using rule 51 (expression)]
    MULOP     [reduce using rule 51 (expression)]
    EXPOP     [reduce using rule 51 (expression)]
    MODOP     [reduce using rule 51 (expression)]
    $default  reduce using rule 51 (expression)

    arithmetic_operator  go to state 81


State 110

   65 term: term MULOP primary •

    $default  reduce using rule 65 (term)


State 111

   64 term: term EXPOP primary •

    $default  reduce using rule 64 (term)


State 112

   66 term: term MODOP primary •

    $default  reduce using rule 66 (term)


State 113

   19 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 124

    list  go to state 128


State 114

   18 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 18 (variable)


State 115

   74 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 74 (primary)


State 116

   31 statement: SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   32 cases: cases • case

    CASE    shift, and go to state 129
    OTHERS  shift, and go to state 130

    case  go to state 131


State 117

   48 relation: '(' condition ')' •

    $default  reduce using rule 48 (relation)


State 118

   44 condition: condition ANDOP relation •

    $default  reduce using rule 44 (condition)


State 119

   45 condition: condition OROP relation •

    $default  reduce using rule 45 (condition)


State 120

   28 statement: WHEN condition ',' expression • ':' expression
   51 expression: expression • arithmetic_operator expression
   58           | expression • ADDOP term

    ADDOP  shift, and go to state 77
    MULOP  shift, and go to state 78
    EXPOP  shift, and go to state 79
    MODOP  shift, and go to state 80
    ':'    shift, and go to state 132

    arithmetic_operator  go to state 81


State 121

   49 relation: expression RELOP expression •
   51 expression: expression • arithmetic_operator expression
   58           | expression • ADDOP term

    ADDOP  shift, and go to state 77
    MULOP  shift, and go to state 78
    EXPOP  shift, and go to state 79
    MODOP  shift, and go to state 80

    $default  reduce using rule 49 (relation)

    arithmetic_operator  go to state 81


State 122

   40 if_statement: IF condition THEN statement_ • elsif_clauses ENDIF
   41             | IF condition THEN statement_ • elsif_clauses ELSE statement_ ENDIF

    ELSIF  shift, and go to state 133

    $default  reduce using rule 42 (elsif_clauses)

    elsif_clauses  go to state 134


State 123

   39 list_choice: IDENTIFIER •

    $default  reduce using rule 39 (list_choice)


State 124

   20 list: '(' • expressions ')'

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 45

    expressions  go to state 135
    expression   go to state 136
    term         go to state 51
    primary      go to state 52


State 125

   38 list_choice: list •

    $default  reduce using rule 38 (list_choice)


State 126

   35 fold_statement: FOLD direction arithmetic_operator list_choice • ENDFOLD

    ENDFOLD  shift, and go to state 137


State 127

   51 expression: expression • arithmetic_operator expression
   58           | expression • ADDOP term
   68 primary: '(' expression • ')'

    ADDOP  shift, and go to state 77
    MULOP  shift, and go to state 78
    EXPOP  shift, and go to state 79
    MODOP  shift, and go to state 80
    ')'    shift, and go to state 138

    arithmetic_operator  go to state 81


State 128

   19 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 139


State 129

   34 case: CASE • INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 140


State 130

   31 statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 141


State 131

   32 cases: cases case •

    $default  reduce using rule 32 (cases)


State 132

   28 statement: WHEN condition ',' expression ':' • expression

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 45

    expression  go to state 142
    term        go to state 51
    primary     go to state 52


State 133

   43 elsif_clauses: ELSIF • condition THEN statement_ elsif_clauses

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    NOTOP          shift, and go to state 65
    '('            shift, and go to state 66

    condition   go to state 143
    relation    go to state 68
    expression  go to state 69
    term        go to state 51
    primary     go to state 52


State 134

   40 if_statement: IF condition THEN statement_ elsif_clauses • ENDIF
   41             | IF condition THEN statement_ elsif_clauses • ELSE statement_ ENDIF

    ELSE   shift, and go to state 144
    ENDIF  shift, and go to state 145


State 135

   20 list: '(' expressions • ')'
   21 expressions: expressions • ',' expression

    ','  shift, and go to state 146
    ')'  shift, and go to state 147


State 136

   22 expressions: expression •
   51 expression: expression • arithmetic_operator expression
   58           | expression • ADDOP term

    ADDOP  shift, and go to state 77
    MULOP  shift, and go to state 78
    EXPOP  shift, and go to state 79
    MODOP  shift, and go to state 80

    $default  reduce using rule 22 (expressions)

    arithmetic_operator  go to state 81


State 137

   35 fold_statement: FOLD direction arithmetic_operator list_choice ENDFOLD •

    $default  reduce using rule 35 (fold_statement)


State 138

   68 primary: '(' expression ')' •

    $default  reduce using rule 68 (primary)


State 139

   19 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 19 (variable)


State 140

   34 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 148


State 141

   31 statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    SWITCH         shift, and go to state 41
    WHEN           shift, and go to state 42
    IF             shift, and go to state 43
    FOLD           shift, and go to state 44
    '('            shift, and go to state 45

    statement       go to state 149
    fold_statement  go to state 48
    if_statement    go to state 49
    expression      go to state 50
    term            go to state 51
    primary         go to state 52


State 142

   28 statement: WHEN condition ',' expression ':' expression •
   51 expression: expression • arithmetic_operator expression
   58           | expression • ADDOP term

    ADDOP  shift, and go to state 77
    MULOP  shift, and go to state 78
    EXPOP  shift, and go to state 79
    MODOP  shift, and go to state 80

    $default  reduce using rule 28 (statement)

    arithmetic_operator  go to state 81


State 143

   43 elsif_clauses: ELSIF condition • THEN statement_ elsif_clauses
   44 condition: condition • ANDOP relation
   45          | condition • OROP relation

    ANDOP  shift, and go to state 94
    OROP   shift, and go to state 95
    THEN   shift, and go to state 150


State 144

   41 if_statement: IF condition THEN statement_ elsif_clauses ELSE • statement_ ENDIF

    error          shift, and go to state 33
    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    SWITCH         shift, and go to state 41
    WHEN           shift, and go to state 42
    IF             shift, and go to state 43
    FOLD           shift, and go to state 44
    '('            shift, and go to state 45

    statement_      go to state 151
    statement       go to state 47
    fold_statement  go to state 48
    if_statement    go to state 49
    expression      go to state 50
    term            go to state 51
    primary         go to state 52


State 145

   40 if_statement: IF condition THEN statement_ elsif_clauses ENDIF •

    $default  reduce using rule 40 (if_statement)


State 146

   21 expressions: expressions ',' • expression

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 45

    expression  go to state 152
    term        go to state 51
    primary     go to state 52


State 147

   20 list: '(' expressions ')' •

    $default  reduce using rule 20 (list)


State 148

   34 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    SWITCH         shift, and go to state 41
    WHEN           shift, and go to state 42
    IF             shift, and go to state 43
    FOLD           shift, and go to state 44
    '('            shift, and go to state 45

    statement       go to state 153
    fold_statement  go to state 48
    if_statement    go to state 49
    expression      go to state 50
    term            go to state 51
    primary         go to state 52


State 149

   31 statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 154


State 150

   43 elsif_clauses: ELSIF condition THEN • statement_ elsif_clauses

    error          shift, and go to state 33
    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    SWITCH         shift, and go to state 41
    WHEN           shift, and go to state 42
    IF             shift, and go to state 43
    FOLD           shift, and go to state 44
    '('            shift, and go to state 45

    statement_      go to state 155
    statement       go to state 47
    fold_statement  go to state 48
    if_statement    go to state 49
    expression      go to state 50
    term            go to state 51
    primary         go to state 52


State 151

   41 if_statement: IF condition THEN statement_ elsif_clauses ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 156


State 152

   21 expressions: expressions ',' expression •
   51 expression: expression • arithmetic_operator expression
   58           | expression • ADDOP term

    ADDOP  shift, and go to state 77
    MULOP  shift, and go to state 78
    EXPOP  shift, and go to state 79
    MODOP  shift, and go to state 80

    $default  reduce using rule 21 (expressions)

    arithmetic_operator  go to state 81


State 153

   34 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 157


State 154

   31 statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 158


State 155

   43 elsif_clauses: ELSIF condition THEN statement_ • elsif_clauses

    ELSIF  shift, and go to state 133

    $default  reduce using rule 42 (elsif_clauses)

    elsif_clauses  go to state 159


State 156

   41 if_statement: IF condition THEN statement_ elsif_clauses ELSE statement_ ENDIF •

    $default  reduce using rule 41 (if_statement)


State 157

   34 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 34 (case)


State 158

   31 statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 31 (statement)


State 159

   43 elsif_clauses: ELSIF condition THEN statement_ elsif_clauses •

    $default  reduce using rule 43 (elsif_clauses)
