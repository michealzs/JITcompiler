Terminals unused in grammar

    REMOP
    ARROW
    CASE
    ENDSWITCH
    OTHERS
    SWITCH
    FOLD
    ENDFOLD
    LEFT
    RIGHT


State 4 conflicts: 1 reduce/reduce
State 17 conflicts: 1 reduce/reduce
State 35 conflicts: 12 reduce/reduce
State 36 conflicts: 12 reduce/reduce
State 37 conflicts: 12 reduce/reduce
State 38 conflicts: 12 reduce/reduce
State 39 conflicts: 12 reduce/reduce
State 48 conflicts: 3 shift/reduce
State 60 conflicts: 4 shift/reduce
State 70 conflicts: 7 shift/reduce
State 83 conflicts: 2 shift/reduce
State 91 conflicts: 12 reduce/reduce
State 98 conflicts: 3 shift/reduce
State 99 conflicts: 4 shift/reduce


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body ';'

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';'
    3                | FUNCTION IDENTIFIER parameters RETURNS type ';'
    4                | error ';'

    5 parameters: parameter more_parameters

    6 more_parameters: ',' parameter more_parameters
    7                | ε

    8 parameter: IDENTIFIER ':' type

    9 type: INTEGER
   10     | REAL
   11     | CHARACTER

   12 optional_variable: variables
   13                  | ε
   14                  | error ';'

   15 variables: variable variables
   16          | ε
   17          | error ';'

   18 variable: IDENTIFIER ':' type IS statement ';'
   19         | IDENTIFIER ':' LIST OF type IS list ';'

   20 list: '(' expressions ')'

   21 expressions: expressions ',' expression
   22            | expression

   23 body: BEGIN_ statement_ END

   24 statement_: statement ';'
   25           | error ';'

   26 statement: WHEN condition
   27          | expression
   28          | WHEN condition ',' expression ':' expression
   29          | if_statement

   30 if_statement: IF condition THEN statement_ elsif_clauses ENDIF
   31             | IF condition THEN statement_ elsif_clauses ELSE statement_ ENDIF

   32 elsif_clauses: ε
   33              | ELSIF condition THEN statement_ elsif_clauses

   34 condition: condition ANDOP relation
   35          | condition OROP relation
   36          | NOTOP condition
   37          | relation

   38 relation: '(' condition ')'
   39         | expression RELOP expression

   40 expression: '(' expression ')'
   41           | expression arithmetic_operator expression
   42           | NEGOP expression
   43           | INT_LITERAL
   44           | CHAR_LITERAL
   45           | REAL_LITERAL
   46           | HEX_LITERAL
   47           | FLOAT_LITERAL
   48           | expression ADDOP term
   49           | term

   50 arithmetic_operator: ADDOP
   51                    | MULOP
   52                    | MODOP
   53                    | EXPOP

   54 term: term EXPOP primary
   55     | term MULOP primary
   56     | term MODOP primary
   57     | primary

   58 primary: '(' expression ')'
   59        | INT_LITERAL
   60        | CHAR_LITERAL
   61        | REAL_LITERAL
   62        | HEX_LITERAL
   63        | FLOAT_LITERAL
   64        | IDENTIFIER '(' expression ')'
   65        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 20 38 40 58 64
    ')' (41) 20 38 40 58 64
    ',' (44) 6 21 28
    ':' (58) 8 18 19 28
    ';' (59) 1 2 3 4 14 17 18 19 24 25
    error (256) 4 14 17 25
    IDENTIFIER <iden> (258) 2 3 8 18 19 64 65
    INT_LITERAL <value> (259) 43 59
    CHAR_LITERAL <value> (260) 44 60
    REAL_LITERAL <value> (261) 45 61
    HEX_LITERAL <value> (262) 46 62
    FLOAT_LITERAL <value> (263) 47 63
    ADDOP <oper> (264) 48 50
    MULOP <oper> (265) 51 55
    ANDOP <oper> (266) 34
    RELOP <oper> (267) 39
    EXPOP <oper> (268) 53 54
    REMOP <oper> (269)
    NEGOP <oper> (270) 42
    MODOP <oper> (271) 52 56
    NOTOP <oper> (272) 36
    OROP <oper> (273) 35
    ARROW (274)
    BEGIN_ (275) 23
    CASE (276)
    CHARACTER (277) 11
    ELSE (278) 31
    END (279) 23
    ENDSWITCH (280)
    FUNCTION (281) 2 3
    INTEGER (282) 9
    IS (283) 18 19
    LIST (284) 19
    OF (285) 19
    OTHERS (286)
    RETURNS (287) 2 3
    SWITCH (288)
    WHEN (289) 26 28
    REAL (290) 10
    IF (291) 30 31
    THEN (292) 30 31 33
    ELSIF (293) 33
    ENDIF (294) 30 31
    FOLD (295)
    ENDFOLD (296)
    LEFT (297)
    RIGHT (298)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    function (50)
        on left: 1
        on right: 0
    function_header (51)
        on left: 2 3 4
        on right: 1
    parameters (52)
        on left: 5
        on right: 3
    more_parameters (53)
        on left: 6 7
        on right: 5 6
    parameter (54)
        on left: 8
        on right: 5 6
    type (55)
        on left: 9 10 11
        on right: 2 3 8 18 19
    optional_variable (56)
        on left: 12 13 14
        on right: 1
    variables (57)
        on left: 15 16 17
        on right: 12 15
    variable (58)
        on left: 18 19
        on right: 15
    list <list> (59)
        on left: 20
        on right: 19
    expressions <list> (60)
        on left: 21 22
        on right: 20 21
    body <value> (61)
        on left: 23
        on right: 1
    statement_ <value> (62)
        on left: 24 25
        on right: 23 30 31 33
    statement <value> (63)
        on left: 26 27 28 29
        on right: 18 24
    if_statement <value> (64)
        on left: 30 31
        on right: 29
    elsif_clauses <value> (65)
        on left: 32 33
        on right: 30 31 33
    condition <value> (66)
        on left: 34 35 36 37
        on right: 26 28 30 31 33 34 35 36 38
    relation <value> (67)
        on left: 38 39
        on right: 34 35 37
    expression <value> (68)
        on left: 40 41 42 43 44 45 46 47 48 49
        on right: 21 22 27 28 39 40 41 42 48 58 64
    arithmetic_operator <oper> (69)
        on left: 50 51 52 53
        on right: 41
    term <value> (70)
        on left: 54 55 56 57
        on right: 48 49 54 55 56
    primary <value> (71)
        on left: 58 59 60 61 62 63 64 65
        on right: 54 55 56 57


State 0

    0 $accept: • function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    4 function_header: error • ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION • IDENTIFIER RETURNS type ';'
    3                | FUNCTION • IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function • $end

    $end  shift, and go to state 7


State 4

    1 function: function_header • optional_variable body ';'

    error       shift, and go to state 8
    IDENTIFIER  shift, and go to state 9

    BEGIN_  reduce using rule 13 (optional_variable)
    BEGIN_  [reduce using rule 16 (variables)]

    optional_variable  go to state 10
    variables          go to state 11
    variable           go to state 12


State 5

    4 function_header: error ';' •

    $default  reduce using rule 4 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER • RETURNS type ';'
    3                | FUNCTION IDENTIFIER • parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 13
    RETURNS     shift, and go to state 14

    parameters  go to state 15
    parameter   go to state 16


State 7

    0 $accept: function $end •

    $default  accept


State 8

   14 optional_variable: error • ';'
   17 variables: error • ';'

    ';'  shift, and go to state 17


State 9

   18 variable: IDENTIFIER • ':' type IS statement ';'
   19         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 18


State 10

    1 function: function_header optional_variable • body ';'

    BEGIN_  shift, and go to state 19

    body  go to state 20


State 11

   12 optional_variable: variables •

    $default  reduce using rule 12 (optional_variable)


State 12

   15 variables: variable • variables

    error       shift, and go to state 21
    IDENTIFIER  shift, and go to state 9

    BEGIN_  reduce using rule 16 (variables)

    variables  go to state 22
    variable   go to state 12


State 13

    8 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 23


State 14

    2 function_header: FUNCTION IDENTIFIER RETURNS • type ';'

    CHARACTER  shift, and go to state 24
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26

    type  go to state 27


State 15

    3 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'

    RETURNS  shift, and go to state 28


State 16

    5 parameters: parameter • more_parameters

    ','  shift, and go to state 29

    $default  reduce using rule 7 (more_parameters)

    more_parameters  go to state 30


State 17

   14 optional_variable: error ';' •
   17 variables: error ';' •

    BEGIN_    reduce using rule 14 (optional_variable)
    BEGIN_    [reduce using rule 17 (variables)]
    $default  reduce using rule 14 (optional_variable)


State 18

   18 variable: IDENTIFIER ':' • type IS statement ';'
   19         | IDENTIFIER ':' • LIST OF type IS list ';'

    CHARACTER  shift, and go to state 24
    INTEGER    shift, and go to state 25
    LIST       shift, and go to state 31
    REAL       shift, and go to state 26

    type  go to state 32


State 19

   23 body: BEGIN_ • statement_ END

    error          shift, and go to state 33
    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    WHEN           shift, and go to state 41
    IF             shift, and go to state 42
    '('            shift, and go to state 43

    statement_    go to state 44
    statement     go to state 45
    if_statement  go to state 46
    expression    go to state 47
    term          go to state 48
    primary       go to state 49


State 20

    1 function: function_header optional_variable body • ';'

    ';'  shift, and go to state 50


State 21

   17 variables: error • ';'

    ';'  shift, and go to state 51


State 22

   15 variables: variable variables •

    $default  reduce using rule 15 (variables)


State 23

    8 parameter: IDENTIFIER ':' • type

    CHARACTER  shift, and go to state 24
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26

    type  go to state 52


State 24

   11 type: CHARACTER •

    $default  reduce using rule 11 (type)


State 25

    9 type: INTEGER •

    $default  reduce using rule 9 (type)


State 26

   10 type: REAL •

    $default  reduce using rule 10 (type)


State 27

    2 function_header: FUNCTION IDENTIFIER RETURNS type • ';'

    ';'  shift, and go to state 53


State 28

    3 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    CHARACTER  shift, and go to state 24
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26

    type  go to state 54


State 29

    6 more_parameters: ',' • parameter more_parameters

    IDENTIFIER  shift, and go to state 13

    parameter  go to state 55


State 30

    5 parameters: parameter more_parameters •

    $default  reduce using rule 5 (parameters)


State 31

   19 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 56


State 32

   18 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 57


State 33

   25 statement_: error • ';'

    ';'  shift, and go to state 58


State 34

   64 primary: IDENTIFIER • '(' expression ')'
   65        | IDENTIFIER •

    '('  shift, and go to state 59

    $default  reduce using rule 65 (primary)


State 35

   43 expression: INT_LITERAL •
   59 primary: INT_LITERAL •

    ADDOP     reduce using rule 43 (expression)
    ADDOP     [reduce using rule 59 (primary)]
    MULOP     reduce using rule 43 (expression)
    MULOP     [reduce using rule 59 (primary)]
    ANDOP     reduce using rule 43 (expression)
    ANDOP     [reduce using rule 59 (primary)]
    RELOP     reduce using rule 43 (expression)
    RELOP     [reduce using rule 59 (primary)]
    EXPOP     reduce using rule 43 (expression)
    EXPOP     [reduce using rule 59 (primary)]
    MODOP     reduce using rule 43 (expression)
    MODOP     [reduce using rule 59 (primary)]
    OROP      reduce using rule 43 (expression)
    OROP      [reduce using rule 59 (primary)]
    THEN      reduce using rule 43 (expression)
    THEN      [reduce using rule 59 (primary)]
    ';'       reduce using rule 43 (expression)
    ';'       [reduce using rule 59 (primary)]
    ','       reduce using rule 43 (expression)
    ','       [reduce using rule 59 (primary)]
    ':'       reduce using rule 43 (expression)
    ':'       [reduce using rule 59 (primary)]
    ')'       reduce using rule 43 (expression)
    ')'       [reduce using rule 59 (primary)]
    $default  reduce using rule 43 (expression)


State 36

   44 expression: CHAR_LITERAL •
   60 primary: CHAR_LITERAL •

    ADDOP     reduce using rule 44 (expression)
    ADDOP     [reduce using rule 60 (primary)]
    MULOP     reduce using rule 44 (expression)
    MULOP     [reduce using rule 60 (primary)]
    ANDOP     reduce using rule 44 (expression)
    ANDOP     [reduce using rule 60 (primary)]
    RELOP     reduce using rule 44 (expression)
    RELOP     [reduce using rule 60 (primary)]
    EXPOP     reduce using rule 44 (expression)
    EXPOP     [reduce using rule 60 (primary)]
    MODOP     reduce using rule 44 (expression)
    MODOP     [reduce using rule 60 (primary)]
    OROP      reduce using rule 44 (expression)
    OROP      [reduce using rule 60 (primary)]
    THEN      reduce using rule 44 (expression)
    THEN      [reduce using rule 60 (primary)]
    ';'       reduce using rule 44 (expression)
    ';'       [reduce using rule 60 (primary)]
    ','       reduce using rule 44 (expression)
    ','       [reduce using rule 60 (primary)]
    ':'       reduce using rule 44 (expression)
    ':'       [reduce using rule 60 (primary)]
    ')'       reduce using rule 44 (expression)
    ')'       [reduce using rule 60 (primary)]
    $default  reduce using rule 44 (expression)


State 37

   45 expression: REAL_LITERAL •
   61 primary: REAL_LITERAL •

    ADDOP     reduce using rule 45 (expression)
    ADDOP     [reduce using rule 61 (primary)]
    MULOP     reduce using rule 45 (expression)
    MULOP     [reduce using rule 61 (primary)]
    ANDOP     reduce using rule 45 (expression)
    ANDOP     [reduce using rule 61 (primary)]
    RELOP     reduce using rule 45 (expression)
    RELOP     [reduce using rule 61 (primary)]
    EXPOP     reduce using rule 45 (expression)
    EXPOP     [reduce using rule 61 (primary)]
    MODOP     reduce using rule 45 (expression)
    MODOP     [reduce using rule 61 (primary)]
    OROP      reduce using rule 45 (expression)
    OROP      [reduce using rule 61 (primary)]
    THEN      reduce using rule 45 (expression)
    THEN      [reduce using rule 61 (primary)]
    ';'       reduce using rule 45 (expression)
    ';'       [reduce using rule 61 (primary)]
    ','       reduce using rule 45 (expression)
    ','       [reduce using rule 61 (primary)]
    ':'       reduce using rule 45 (expression)
    ':'       [reduce using rule 61 (primary)]
    ')'       reduce using rule 45 (expression)
    ')'       [reduce using rule 61 (primary)]
    $default  reduce using rule 45 (expression)


State 38

   46 expression: HEX_LITERAL •
   62 primary: HEX_LITERAL •

    ADDOP     reduce using rule 46 (expression)
    ADDOP     [reduce using rule 62 (primary)]
    MULOP     reduce using rule 46 (expression)
    MULOP     [reduce using rule 62 (primary)]
    ANDOP     reduce using rule 46 (expression)
    ANDOP     [reduce using rule 62 (primary)]
    RELOP     reduce using rule 46 (expression)
    RELOP     [reduce using rule 62 (primary)]
    EXPOP     reduce using rule 46 (expression)
    EXPOP     [reduce using rule 62 (primary)]
    MODOP     reduce using rule 46 (expression)
    MODOP     [reduce using rule 62 (primary)]
    OROP      reduce using rule 46 (expression)
    OROP      [reduce using rule 62 (primary)]
    THEN      reduce using rule 46 (expression)
    THEN      [reduce using rule 62 (primary)]
    ';'       reduce using rule 46 (expression)
    ';'       [reduce using rule 62 (primary)]
    ','       reduce using rule 46 (expression)
    ','       [reduce using rule 62 (primary)]
    ':'       reduce using rule 46 (expression)
    ':'       [reduce using rule 62 (primary)]
    ')'       reduce using rule 46 (expression)
    ')'       [reduce using rule 62 (primary)]
    $default  reduce using rule 46 (expression)


State 39

   47 expression: FLOAT_LITERAL •
   63 primary: FLOAT_LITERAL •

    ADDOP     reduce using rule 47 (expression)
    ADDOP     [reduce using rule 63 (primary)]
    MULOP     reduce using rule 47 (expression)
    MULOP     [reduce using rule 63 (primary)]
    ANDOP     reduce using rule 47 (expression)
    ANDOP     [reduce using rule 63 (primary)]
    RELOP     reduce using rule 47 (expression)
    RELOP     [reduce using rule 63 (primary)]
    EXPOP     reduce using rule 47 (expression)
    EXPOP     [reduce using rule 63 (primary)]
    MODOP     reduce using rule 47 (expression)
    MODOP     [reduce using rule 63 (primary)]
    OROP      reduce using rule 47 (expression)
    OROP      [reduce using rule 63 (primary)]
    THEN      reduce using rule 47 (expression)
    THEN      [reduce using rule 63 (primary)]
    ';'       reduce using rule 47 (expression)
    ';'       [reduce using rule 63 (primary)]
    ','       reduce using rule 47 (expression)
    ','       [reduce using rule 63 (primary)]
    ':'       reduce using rule 47 (expression)
    ':'       [reduce using rule 63 (primary)]
    ')'       reduce using rule 47 (expression)
    ')'       [reduce using rule 63 (primary)]
    $default  reduce using rule 47 (expression)


State 40

   42 expression: NEGOP • expression

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 43

    expression  go to state 60
    term        go to state 48
    primary     go to state 49


State 41

   26 statement: WHEN • condition
   28          | WHEN • condition ',' expression ':' expression

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    NOTOP          shift, and go to state 61
    '('            shift, and go to state 62

    condition   go to state 63
    relation    go to state 64
    expression  go to state 65
    term        go to state 48
    primary     go to state 49


State 42

   30 if_statement: IF • condition THEN statement_ elsif_clauses ENDIF
   31             | IF • condition THEN statement_ elsif_clauses ELSE statement_ ENDIF

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    NOTOP          shift, and go to state 61
    '('            shift, and go to state 62

    condition   go to state 66
    relation    go to state 64
    expression  go to state 65
    term        go to state 48
    primary     go to state 49


State 43

   40 expression: '(' • expression ')'
   58 primary: '(' • expression ')'

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 43

    expression  go to state 67
    term        go to state 48
    primary     go to state 49


State 44

   23 body: BEGIN_ statement_ • END

    END  shift, and go to state 68


State 45

   24 statement_: statement • ';'

    ';'  shift, and go to state 69


State 46

   29 statement: if_statement •

    $default  reduce using rule 29 (statement)


State 47

   27 statement: expression •
   41 expression: expression • arithmetic_operator expression
   48           | expression • ADDOP term

    ADDOP  shift, and go to state 70
    MULOP  shift, and go to state 71
    EXPOP  shift, and go to state 72
    MODOP  shift, and go to state 73

    $default  reduce using rule 27 (statement)

    arithmetic_operator  go to state 74


State 48

   49 expression: term •
   54 term: term • EXPOP primary
   55     | term • MULOP primary
   56     | term • MODOP primary

    MULOP  shift, and go to state 75
    EXPOP  shift, and go to state 76
    MODOP  shift, and go to state 77

    MULOP     [reduce using rule 49 (expression)]
    EXPOP     [reduce using rule 49 (expression)]
    MODOP     [reduce using rule 49 (expression)]
    $default  reduce using rule 49 (expression)


State 49

   57 term: primary •

    $default  reduce using rule 57 (term)


State 50

    1 function: function_header optional_variable body ';' •

    $default  reduce using rule 1 (function)


State 51

   17 variables: error ';' •

    $default  reduce using rule 17 (variables)


State 52

    8 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 8 (parameter)


State 53

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 54

    3 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 78


State 55

    6 more_parameters: ',' parameter • more_parameters

    ','  shift, and go to state 29

    $default  reduce using rule 7 (more_parameters)

    more_parameters  go to state 79


State 56

   19 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    CHARACTER  shift, and go to state 24
    INTEGER    shift, and go to state 25
    REAL       shift, and go to state 26

    type  go to state 80


State 57

   18 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    WHEN           shift, and go to state 41
    IF             shift, and go to state 42
    '('            shift, and go to state 43

    statement     go to state 81
    if_statement  go to state 46
    expression    go to state 47
    term          go to state 48
    primary       go to state 49


State 58

   25 statement_: error ';' •

    $default  reduce using rule 25 (statement_)


State 59

   64 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 43

    expression  go to state 82
    term        go to state 48
    primary     go to state 49


State 60

   41 expression: expression • arithmetic_operator expression
   42           | NEGOP expression •
   48           | expression • ADDOP term

    ADDOP  shift, and go to state 70
    MULOP  shift, and go to state 71
    EXPOP  shift, and go to state 72
    MODOP  shift, and go to state 73

    ADDOP     [reduce using rule 42 (expression)]
    MULOP     [reduce using rule 42 (expression)]
    EXPOP     [reduce using rule 42 (expression)]
    MODOP     [reduce using rule 42 (expression)]
    $default  reduce using rule 42 (expression)

    arithmetic_operator  go to state 74


State 61

   36 condition: NOTOP • condition

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    NOTOP          shift, and go to state 61
    '('            shift, and go to state 62

    condition   go to state 83
    relation    go to state 64
    expression  go to state 65
    term        go to state 48
    primary     go to state 49


State 62

   38 relation: '(' • condition ')'
   40 expression: '(' • expression ')'
   58 primary: '(' • expression ')'

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    NOTOP          shift, and go to state 61
    '('            shift, and go to state 62

    condition   go to state 84
    relation    go to state 64
    expression  go to state 85
    term        go to state 48
    primary     go to state 49


State 63

   26 statement: WHEN condition •
   28          | WHEN condition • ',' expression ':' expression
   34 condition: condition • ANDOP relation
   35          | condition • OROP relation

    ANDOP  shift, and go to state 86
    OROP   shift, and go to state 87
    ','    shift, and go to state 88

    $default  reduce using rule 26 (statement)


State 64

   37 condition: relation •

    $default  reduce using rule 37 (condition)


State 65

   39 relation: expression • RELOP expression
   41 expression: expression • arithmetic_operator expression
   48           | expression • ADDOP term

    ADDOP  shift, and go to state 70
    MULOP  shift, and go to state 71
    RELOP  shift, and go to state 89
    EXPOP  shift, and go to state 72
    MODOP  shift, and go to state 73

    arithmetic_operator  go to state 74


State 66

   30 if_statement: IF condition • THEN statement_ elsif_clauses ENDIF
   31             | IF condition • THEN statement_ elsif_clauses ELSE statement_ ENDIF
   34 condition: condition • ANDOP relation
   35          | condition • OROP relation

    ANDOP  shift, and go to state 86
    OROP   shift, and go to state 87
    THEN   shift, and go to state 90


State 67

   40 expression: '(' expression • ')'
   41           | expression • arithmetic_operator expression
   48           | expression • ADDOP term
   58 primary: '(' expression • ')'

    ADDOP  shift, and go to state 70
    MULOP  shift, and go to state 71
    EXPOP  shift, and go to state 72
    MODOP  shift, and go to state 73
    ')'    shift, and go to state 91

    arithmetic_operator  go to state 74


State 68

   23 body: BEGIN_ statement_ END •

    $default  reduce using rule 23 (body)


State 69

   24 statement_: statement ';' •

    $default  reduce using rule 24 (statement_)


State 70

   48 expression: expression ADDOP • term
   50 arithmetic_operator: ADDOP •

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 92
    CHAR_LITERAL   shift, and go to state 93
    REAL_LITERAL   shift, and go to state 94
    HEX_LITERAL    shift, and go to state 95
    FLOAT_LITERAL  shift, and go to state 96
    '('            shift, and go to state 97

    IDENTIFIER     [reduce using rule 50 (arithmetic_operator)]
    INT_LITERAL    [reduce using rule 50 (arithmetic_operator)]
    CHAR_LITERAL   [reduce using rule 50 (arithmetic_operator)]
    REAL_LITERAL   [reduce using rule 50 (arithmetic_operator)]
    HEX_LITERAL    [reduce using rule 50 (arithmetic_operator)]
    FLOAT_LITERAL  [reduce using rule 50 (arithmetic_operator)]
    '('            [reduce using rule 50 (arithmetic_operator)]
    $default       reduce using rule 50 (arithmetic_operator)

    term     go to state 98
    primary  go to state 49


State 71

   51 arithmetic_operator: MULOP •

    $default  reduce using rule 51 (arithmetic_operator)


State 72

   53 arithmetic_operator: EXPOP •

    $default  reduce using rule 53 (arithmetic_operator)


State 73

   52 arithmetic_operator: MODOP •

    $default  reduce using rule 52 (arithmetic_operator)


State 74

   41 expression: expression arithmetic_operator • expression

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 43

    expression  go to state 99
    term        go to state 48
    primary     go to state 49


State 75

   55 term: term MULOP • primary

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 92
    CHAR_LITERAL   shift, and go to state 93
    REAL_LITERAL   shift, and go to state 94
    HEX_LITERAL    shift, and go to state 95
    FLOAT_LITERAL  shift, and go to state 96
    '('            shift, and go to state 97

    primary  go to state 100


State 76

   54 term: term EXPOP • primary

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 92
    CHAR_LITERAL   shift, and go to state 93
    REAL_LITERAL   shift, and go to state 94
    HEX_LITERAL    shift, and go to state 95
    FLOAT_LITERAL  shift, and go to state 96
    '('            shift, and go to state 97

    primary  go to state 101


State 77

   56 term: term MODOP • primary

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 92
    CHAR_LITERAL   shift, and go to state 93
    REAL_LITERAL   shift, and go to state 94
    HEX_LITERAL    shift, and go to state 95
    FLOAT_LITERAL  shift, and go to state 96
    '('            shift, and go to state 97

    primary  go to state 102


State 78

    3 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 3 (function_header)


State 79

    6 more_parameters: ',' parameter more_parameters •

    $default  reduce using rule 6 (more_parameters)


State 80

   19 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 103


State 81

   18 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 104


State 82

   41 expression: expression • arithmetic_operator expression
   48           | expression • ADDOP term
   64 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 70
    MULOP  shift, and go to state 71
    EXPOP  shift, and go to state 72
    MODOP  shift, and go to state 73
    ')'    shift, and go to state 105

    arithmetic_operator  go to state 74


State 83

   34 condition: condition • ANDOP relation
   35          | condition • OROP relation
   36          | NOTOP condition •

    ANDOP  shift, and go to state 86
    OROP   shift, and go to state 87

    ANDOP     [reduce using rule 36 (condition)]
    OROP      [reduce using rule 36 (condition)]
    $default  reduce using rule 36 (condition)


State 84

   34 condition: condition • ANDOP relation
   35          | condition • OROP relation
   38 relation: '(' condition • ')'

    ANDOP  shift, and go to state 86
    OROP   shift, and go to state 87
    ')'    shift, and go to state 106


State 85

   39 relation: expression • RELOP expression
   40 expression: '(' expression • ')'
   41           | expression • arithmetic_operator expression
   48           | expression • ADDOP term
   58 primary: '(' expression • ')'

    ADDOP  shift, and go to state 70
    MULOP  shift, and go to state 71
    RELOP  shift, and go to state 89
    EXPOP  shift, and go to state 72
    MODOP  shift, and go to state 73
    ')'    shift, and go to state 91

    arithmetic_operator  go to state 74


State 86

   34 condition: condition ANDOP • relation

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 62

    relation    go to state 107
    expression  go to state 65
    term        go to state 48
    primary     go to state 49


State 87

   35 condition: condition OROP • relation

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 62

    relation    go to state 108
    expression  go to state 65
    term        go to state 48
    primary     go to state 49


State 88

   28 statement: WHEN condition ',' • expression ':' expression

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 43

    expression  go to state 109
    term        go to state 48
    primary     go to state 49


State 89

   39 relation: expression RELOP • expression

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 43

    expression  go to state 110
    term        go to state 48
    primary     go to state 49


State 90

   30 if_statement: IF condition THEN • statement_ elsif_clauses ENDIF
   31             | IF condition THEN • statement_ elsif_clauses ELSE statement_ ENDIF

    error          shift, and go to state 33
    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    WHEN           shift, and go to state 41
    IF             shift, and go to state 42
    '('            shift, and go to state 43

    statement_    go to state 111
    statement     go to state 45
    if_statement  go to state 46
    expression    go to state 47
    term          go to state 48
    primary       go to state 49


State 91

   40 expression: '(' expression ')' •
   58 primary: '(' expression ')' •

    ADDOP     reduce using rule 40 (expression)
    ADDOP     [reduce using rule 58 (primary)]
    MULOP     reduce using rule 40 (expression)
    MULOP     [reduce using rule 58 (primary)]
    ANDOP     reduce using rule 40 (expression)
    ANDOP     [reduce using rule 58 (primary)]
    RELOP     reduce using rule 40 (expression)
    RELOP     [reduce using rule 58 (primary)]
    EXPOP     reduce using rule 40 (expression)
    EXPOP     [reduce using rule 58 (primary)]
    MODOP     reduce using rule 40 (expression)
    MODOP     [reduce using rule 58 (primary)]
    OROP      reduce using rule 40 (expression)
    OROP      [reduce using rule 58 (primary)]
    THEN      reduce using rule 40 (expression)
    THEN      [reduce using rule 58 (primary)]
    ';'       reduce using rule 40 (expression)
    ';'       [reduce using rule 58 (primary)]
    ','       reduce using rule 40 (expression)
    ','       [reduce using rule 58 (primary)]
    ':'       reduce using rule 40 (expression)
    ':'       [reduce using rule 58 (primary)]
    ')'       reduce using rule 40 (expression)
    ')'       [reduce using rule 58 (primary)]
    $default  reduce using rule 40 (expression)


State 92

   59 primary: INT_LITERAL •

    $default  reduce using rule 59 (primary)


State 93

   60 primary: CHAR_LITERAL •

    $default  reduce using rule 60 (primary)


State 94

   61 primary: REAL_LITERAL •

    $default  reduce using rule 61 (primary)


State 95

   62 primary: HEX_LITERAL •

    $default  reduce using rule 62 (primary)


State 96

   63 primary: FLOAT_LITERAL •

    $default  reduce using rule 63 (primary)


State 97

   58 primary: '(' • expression ')'

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 43

    expression  go to state 112
    term        go to state 48
    primary     go to state 49


State 98

   48 expression: expression ADDOP term •
   54 term: term • EXPOP primary
   55     | term • MULOP primary
   56     | term • MODOP primary

    MULOP  shift, and go to state 75
    EXPOP  shift, and go to state 76
    MODOP  shift, and go to state 77

    MULOP     [reduce using rule 48 (expression)]
    EXPOP     [reduce using rule 48 (expression)]
    MODOP     [reduce using rule 48 (expression)]
    $default  reduce using rule 48 (expression)


State 99

   41 expression: expression • arithmetic_operator expression
   41           | expression arithmetic_operator expression •
   48           | expression • ADDOP term

    ADDOP  shift, and go to state 70
    MULOP  shift, and go to state 71
    EXPOP  shift, and go to state 72
    MODOP  shift, and go to state 73

    ADDOP     [reduce using rule 41 (expression)]
    MULOP     [reduce using rule 41 (expression)]
    EXPOP     [reduce using rule 41 (expression)]
    MODOP     [reduce using rule 41 (expression)]
    $default  reduce using rule 41 (expression)

    arithmetic_operator  go to state 74


State 100

   55 term: term MULOP primary •

    $default  reduce using rule 55 (term)


State 101

   54 term: term EXPOP primary •

    $default  reduce using rule 54 (term)


State 102

   56 term: term MODOP primary •

    $default  reduce using rule 56 (term)


State 103

   19 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 113

    list  go to state 114


State 104

   18 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 18 (variable)


State 105

   64 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 64 (primary)


State 106

   38 relation: '(' condition ')' •

    $default  reduce using rule 38 (relation)


State 107

   34 condition: condition ANDOP relation •

    $default  reduce using rule 34 (condition)


State 108

   35 condition: condition OROP relation •

    $default  reduce using rule 35 (condition)


State 109

   28 statement: WHEN condition ',' expression • ':' expression
   41 expression: expression • arithmetic_operator expression
   48           | expression • ADDOP term

    ADDOP  shift, and go to state 70
    MULOP  shift, and go to state 71
    EXPOP  shift, and go to state 72
    MODOP  shift, and go to state 73
    ':'    shift, and go to state 115

    arithmetic_operator  go to state 74


State 110

   39 relation: expression RELOP expression •
   41 expression: expression • arithmetic_operator expression
   48           | expression • ADDOP term

    ADDOP  shift, and go to state 70
    MULOP  shift, and go to state 71
    EXPOP  shift, and go to state 72
    MODOP  shift, and go to state 73

    $default  reduce using rule 39 (relation)

    arithmetic_operator  go to state 74


State 111

   30 if_statement: IF condition THEN statement_ • elsif_clauses ENDIF
   31             | IF condition THEN statement_ • elsif_clauses ELSE statement_ ENDIF

    ELSIF  shift, and go to state 116

    $default  reduce using rule 32 (elsif_clauses)

    elsif_clauses  go to state 117


State 112

   41 expression: expression • arithmetic_operator expression
   48           | expression • ADDOP term
   58 primary: '(' expression • ')'

    ADDOP  shift, and go to state 70
    MULOP  shift, and go to state 71
    EXPOP  shift, and go to state 72
    MODOP  shift, and go to state 73
    ')'    shift, and go to state 118

    arithmetic_operator  go to state 74


State 113

   20 list: '(' • expressions ')'

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 43

    expressions  go to state 119
    expression   go to state 120
    term         go to state 48
    primary      go to state 49


State 114

   19 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 121


State 115

   28 statement: WHEN condition ',' expression ':' • expression

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 43

    expression  go to state 122
    term        go to state 48
    primary     go to state 49


State 116

   33 elsif_clauses: ELSIF • condition THEN statement_ elsif_clauses

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    NOTOP          shift, and go to state 61
    '('            shift, and go to state 62

    condition   go to state 123
    relation    go to state 64
    expression  go to state 65
    term        go to state 48
    primary     go to state 49


State 117

   30 if_statement: IF condition THEN statement_ elsif_clauses • ENDIF
   31             | IF condition THEN statement_ elsif_clauses • ELSE statement_ ENDIF

    ELSE   shift, and go to state 124
    ENDIF  shift, and go to state 125


State 118

   58 primary: '(' expression ')' •

    $default  reduce using rule 58 (primary)


State 119

   20 list: '(' expressions • ')'
   21 expressions: expressions • ',' expression

    ','  shift, and go to state 126
    ')'  shift, and go to state 127


State 120

   22 expressions: expression •
   41 expression: expression • arithmetic_operator expression
   48           | expression • ADDOP term

    ADDOP  shift, and go to state 70
    MULOP  shift, and go to state 71
    EXPOP  shift, and go to state 72
    MODOP  shift, and go to state 73

    $default  reduce using rule 22 (expressions)

    arithmetic_operator  go to state 74


State 121

   19 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 19 (variable)


State 122

   28 statement: WHEN condition ',' expression ':' expression •
   41 expression: expression • arithmetic_operator expression
   48           | expression • ADDOP term

    ADDOP  shift, and go to state 70
    MULOP  shift, and go to state 71
    EXPOP  shift, and go to state 72
    MODOP  shift, and go to state 73

    $default  reduce using rule 28 (statement)

    arithmetic_operator  go to state 74


State 123

   33 elsif_clauses: ELSIF condition • THEN statement_ elsif_clauses
   34 condition: condition • ANDOP relation
   35          | condition • OROP relation

    ANDOP  shift, and go to state 86
    OROP   shift, and go to state 87
    THEN   shift, and go to state 128


State 124

   31 if_statement: IF condition THEN statement_ elsif_clauses ELSE • statement_ ENDIF

    error          shift, and go to state 33
    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    WHEN           shift, and go to state 41
    IF             shift, and go to state 42
    '('            shift, and go to state 43

    statement_    go to state 129
    statement     go to state 45
    if_statement  go to state 46
    expression    go to state 47
    term          go to state 48
    primary       go to state 49


State 125

   30 if_statement: IF condition THEN statement_ elsif_clauses ENDIF •

    $default  reduce using rule 30 (if_statement)


State 126

   21 expressions: expressions ',' • expression

    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    '('            shift, and go to state 43

    expression  go to state 130
    term        go to state 48
    primary     go to state 49


State 127

   20 list: '(' expressions ')' •

    $default  reduce using rule 20 (list)


State 128

   33 elsif_clauses: ELSIF condition THEN • statement_ elsif_clauses

    error          shift, and go to state 33
    IDENTIFIER     shift, and go to state 34
    INT_LITERAL    shift, and go to state 35
    CHAR_LITERAL   shift, and go to state 36
    REAL_LITERAL   shift, and go to state 37
    HEX_LITERAL    shift, and go to state 38
    FLOAT_LITERAL  shift, and go to state 39
    NEGOP          shift, and go to state 40
    WHEN           shift, and go to state 41
    IF             shift, and go to state 42
    '('            shift, and go to state 43

    statement_    go to state 131
    statement     go to state 45
    if_statement  go to state 46
    expression    go to state 47
    term          go to state 48
    primary       go to state 49


State 129

   31 if_statement: IF condition THEN statement_ elsif_clauses ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 132


State 130

   21 expressions: expressions ',' expression •
   41 expression: expression • arithmetic_operator expression
   48           | expression • ADDOP term

    ADDOP  shift, and go to state 70
    MULOP  shift, and go to state 71
    EXPOP  shift, and go to state 72
    MODOP  shift, and go to state 73

    $default  reduce using rule 21 (expressions)

    arithmetic_operator  go to state 74


State 131

   33 elsif_clauses: ELSIF condition THEN statement_ • elsif_clauses

    ELSIF  shift, and go to state 116

    $default  reduce using rule 32 (elsif_clauses)

    elsif_clauses  go to state 133


State 132

   31 if_statement: IF condition THEN statement_ elsif_clauses ELSE statement_ ENDIF •

    $default  reduce using rule 31 (if_statement)


State 133

   33 elsif_clauses: ELSIF condition THEN statement_ elsif_clauses •

    $default  reduce using rule 33 (elsif_clauses)
